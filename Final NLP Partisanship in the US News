{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"gpuType":"T4","collapsed_sections":["oLe-3PhTY6tv","FhaVymfCY91I","P0aBmPQFZhw2","d5WlogwHaokl","9ORbs-nzZZRq","MXDLaL9PZacm","6a8vyTD_c3LY","o1Nm9hZ9c6BG","Z9fcxXFQdNkh"]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU","widgets":{"application/vnd.jupyter.widget-state+json":{"21a27f648df64e839e523ba17f660ce6":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_d2a5d67ee3264453bb7476303afbe82a","IPY_MODEL_3a026828aa6e4390a9c99d165582b2c2","IPY_MODEL_dcf54374adb84c9d9fd20134b3a699e2"],"layout":"IPY_MODEL_fd350251b0b84aa68fc1732ca8158c1e"}},"d2a5d67ee3264453bb7476303afbe82a":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_3e39e62007ac4ddbaa6660429aac0fbd","placeholder":"​","style":"IPY_MODEL_a9286c2fad914c49bb99a751485f27b7","value":"tokenizer_config.json: 100%"}},"3a026828aa6e4390a9c99d165582b2c2":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_9da6e3abc9e44792a3dd49fee8cdb598","max":48,"min":0,"orientation":"horizontal","style":"IPY_MODEL_b7c02a85f0da42e5a85bf7041df76a25","value":48}},"dcf54374adb84c9d9fd20134b3a699e2":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_334c2f97692e4cc191d51b573e1168e0","placeholder":"​","style":"IPY_MODEL_0c4e2e3606d64a4e8a2b4781018804d6","value":" 48.0/48.0 [00:00&lt;00:00, 3.24kB/s]"}},"fd350251b0b84aa68fc1732ca8158c1e":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"3e39e62007ac4ddbaa6660429aac0fbd":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"a9286c2fad914c49bb99a751485f27b7":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"9da6e3abc9e44792a3dd49fee8cdb598":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"b7c02a85f0da42e5a85bf7041df76a25":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"334c2f97692e4cc191d51b573e1168e0":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"0c4e2e3606d64a4e8a2b4781018804d6":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"53d1248e1afa463ba00ec0e874c60812":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_a3ba1d08e97442dc82104ea89ccb605e","IPY_MODEL_6867aca26bd44e7899505c7c5cb5e54c","IPY_MODEL_c2512a2cebb041e5bea94730902e86d8"],"layout":"IPY_MODEL_a4e7d747e6db4cceb8b5310dce218c74"}},"a3ba1d08e97442dc82104ea89ccb605e":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_12eacc79878c4769a72b53ffd2beee12","placeholder":"​","style":"IPY_MODEL_fc94fa7ee0bf431fb029e560de1538ff","value":"vocab.txt: 100%"}},"6867aca26bd44e7899505c7c5cb5e54c":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_85adccffdb394d4fb4c379d71fa46d43","max":231508,"min":0,"orientation":"horizontal","style":"IPY_MODEL_a07d7b733c6644288f67a15ecb76a563","value":231508}},"c2512a2cebb041e5bea94730902e86d8":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_3bcb3151e8e34afd85abf9c4451431ee","placeholder":"​","style":"IPY_MODEL_1aa53344dd9a4b55905110839e933036","value":" 232k/232k [00:00&lt;00:00, 1.90MB/s]"}},"a4e7d747e6db4cceb8b5310dce218c74":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"12eacc79878c4769a72b53ffd2beee12":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"fc94fa7ee0bf431fb029e560de1538ff":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"85adccffdb394d4fb4c379d71fa46d43":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"a07d7b733c6644288f67a15ecb76a563":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"3bcb3151e8e34afd85abf9c4451431ee":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"1aa53344dd9a4b55905110839e933036":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"ecad9d1dc3d54fd1bdc7a460d5527dce":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_571711764c2f465584dfdd7fedf59a85","IPY_MODEL_f3edd2e24e6644a7b9206af0190d19a1","IPY_MODEL_1d6d82d5f9fd4223b4cb39da8b71906e"],"layout":"IPY_MODEL_67d8715ffe804a30848713c8a0a1225c"}},"571711764c2f465584dfdd7fedf59a85":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_cb85312c172a4ec797df8eeeed7b50ea","placeholder":"​","style":"IPY_MODEL_86dca30d6fe7477fa12c20af55e0979e","value":"tokenizer.json: 100%"}},"f3edd2e24e6644a7b9206af0190d19a1":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_d1cb597477984659adfc79867c7f2d5f","max":466062,"min":0,"orientation":"horizontal","style":"IPY_MODEL_97e1906681564ff3a5b9066d1165b921","value":466062}},"1d6d82d5f9fd4223b4cb39da8b71906e":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_d6d56f452f134978a023aabf6c18d654","placeholder":"​","style":"IPY_MODEL_ddbd0f700bd74ded891b6862fa887352","value":" 466k/466k [00:00&lt;00:00, 7.06MB/s]"}},"67d8715ffe804a30848713c8a0a1225c":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"cb85312c172a4ec797df8eeeed7b50ea":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"86dca30d6fe7477fa12c20af55e0979e":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"d1cb597477984659adfc79867c7f2d5f":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"97e1906681564ff3a5b9066d1165b921":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"d6d56f452f134978a023aabf6c18d654":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"ddbd0f700bd74ded891b6862fa887352":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"00809960d3214a0da180890ec6fc832d":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_b72bfe17274642e8a544f439ebc5127d","IPY_MODEL_3c8ee72ad2c246f6a2384cd057b91c8a","IPY_MODEL_a483de8b43e840b69466acb9fcbe7b01"],"layout":"IPY_MODEL_2b83f344fb9d47b5b91965c0bd726e79"}},"b72bfe17274642e8a544f439ebc5127d":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_c19f6404cc0245f18e4b8a13bd52457d","placeholder":"​","style":"IPY_MODEL_adffed60b5ca4f9da8e1174b110d09f4","value":"config.json: 100%"}},"3c8ee72ad2c246f6a2384cd057b91c8a":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_f5930e8f004e4017828254578793d9ac","max":570,"min":0,"orientation":"horizontal","style":"IPY_MODEL_796705c5930f4481befc157c136d4509","value":570}},"a483de8b43e840b69466acb9fcbe7b01":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_24eb0896ff964714b787da2bb1e89ed7","placeholder":"​","style":"IPY_MODEL_436914eea3ef404b88ac3b076339ba74","value":" 570/570 [00:00&lt;00:00, 28.7kB/s]"}},"2b83f344fb9d47b5b91965c0bd726e79":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"c19f6404cc0245f18e4b8a13bd52457d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"adffed60b5ca4f9da8e1174b110d09f4":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"f5930e8f004e4017828254578793d9ac":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"796705c5930f4481befc157c136d4509":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"24eb0896ff964714b787da2bb1e89ed7":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"436914eea3ef404b88ac3b076339ba74":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"630689b4f6404735b454de4620d14139":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_73a2e6d397134746813919bf8ccd1d61","IPY_MODEL_ebc9193508bc41fa8bb01c50eb5a02ee","IPY_MODEL_7666b3fe97564754ba0ca65c09a2f524"],"layout":"IPY_MODEL_c38e14ffbc1d458495058e709de4223b"}},"73a2e6d397134746813919bf8ccd1d61":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_c74fe032b0ef416da4dc9ba740f198d6","placeholder":"​","style":"IPY_MODEL_4f3655f2d4324c1c80794f4c31aa1222","value":"model.safetensors: 100%"}},"ebc9193508bc41fa8bb01c50eb5a02ee":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_8dfcf5dfa1584c8d92e207eeca32019e","max":440449768,"min":0,"orientation":"horizontal","style":"IPY_MODEL_287dd099145d4d95b747a6008c6d7359","value":440449768}},"7666b3fe97564754ba0ca65c09a2f524":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_b034b9bf36ce4bc9a72f1a04632901e1","placeholder":"​","style":"IPY_MODEL_0f5ce690281a40a3855d107f586fa6b1","value":" 440M/440M [00:02&lt;00:00, 193MB/s]"}},"c38e14ffbc1d458495058e709de4223b":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"c74fe032b0ef416da4dc9ba740f198d6":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"4f3655f2d4324c1c80794f4c31aa1222":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"8dfcf5dfa1584c8d92e207eeca32019e":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"287dd099145d4d95b747a6008c6d7359":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"b034b9bf36ce4bc9a72f1a04632901e1":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"0f5ce690281a40a3855d107f586fa6b1":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}}}}},"cells":[{"cell_type":"code","execution_count":2,"metadata":{"id":"rOUyHiRiXfEi","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1714363410403,"user_tz":240,"elapsed":21191,"user":{"displayName":"Maya Krishnamoorthy","userId":"05037076869531260425"}},"outputId":"ab903ae6-f102-400a-e4b7-d22fd0954449"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"markdown","source":["# Load In Dataset"],"metadata":{"id":"5Jorl_xHXvaj"}},{"cell_type":"code","source":["import pandas as pd\n","\n","# Specify the path to your TSV file\n","file_path = '/content/drive/MyDrive/NLP/news_articles_normalized.csv'\n","\n","# Read the TSV file using Pandas\n","content = pd.read_csv(file_path)\n","\n","content"],"metadata":{"id":"4lPLPV9OXw9l","colab":{"base_uri":"https://localhost:8080/","height":964},"executionInfo":{"status":"ok","timestamp":1714363412864,"user_tz":240,"elapsed":2465,"user":{"displayName":"Maya Krishnamoorthy","userId":"05037076869531260425"}},"outputId":"f447fe02-7af4-4878-dba2-733cb0fa6279"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                                     url       q3  perceived  \\\n","0      http://www.usatoday.com/story/news/nation/2013...    other          1   \n","1      http://www.huffingtonpost.com/2013/05/21/senat...     News          0   \n","2      http://www.breitbart.com/Big-Government/2013/1...  Opinion          1   \n","3      http://www.cnn.com/2013/06/28/politics/obama-c...  Opinion          1   \n","4          http://www.bbc.co.uk/news/technology-22213379  Opinion          1   \n","...                                                  ...      ...        ...   \n","10771  http://www.dailykos.com/story/2013/06/21/12177...     News          1   \n","10772  http://www.cnn.com/2013/08/16/opinion/brazile-...     News          0   \n","10773  http://www.washingtonpost.com/opinions/dana-mi...     News          1   \n","10774  http://news.yahoo.com/republicans-hatred-obama...  Opinion          1   \n","10775  http://www.huffingtonpost.com/2013/08/11/this-...  Opinion          1   \n","\n","             primary.topic      secondary.topic  democrat.vote  \\\n","0             Civil Rights         Civil Rights            0.0   \n","1             Civil Rights         Civil Rights            0.0   \n","2             Civil Rights         Civil Rights            0.0   \n","3             Civil Rights         Civil Rights            0.0   \n","4             Civil Rights         Civil Rights            0.0   \n","...                    ...                  ...            ...   \n","10771                  NaN  Republican Scandals            0.5   \n","10772  Republican Scandals  Republican Scandals            0.0   \n","10773  Republican Scandals  Republican Scandals            0.5   \n","10774  Republican Scandals  Republican Scandals            0.5   \n","10775  Republican Scandals  Republican Scandals            0.5   \n","\n","       republican.vote negatively_affected leaning_toward        organization  \\\n","0                  0.0             Neutral        Neutral        usatoday.com   \n","1                  0.0             Neutral        Neutral  huffingtonpost.com   \n","2                  0.0             Neutral        Neutral       breitbart.com   \n","3                  0.0             Neutral        Neutral             cnn.com   \n","4                  0.0             Neutral        Neutral           bbc.co.uk   \n","...                ...                 ...            ...                 ...   \n","10771             -1.0          Republican       Democrat        dailykos.com   \n","10772              0.0             Neutral        Neutral             cnn.com   \n","10773             -0.5          Republican       Democrat  washingtonpost.com   \n","10774             -0.5          Republican       Democrat      news.yahoo.com   \n","10775             -0.5          Republican       Democrat  huffingtonpost.com   \n","\n","                                            text_content  \n","0      the acquittal of george zimmerman in the killi...  \n","1      copy chief huffpost washington -- the senate j...  \n","2      in a public statement that will be released th...  \n","3      rule let group like religious hospital school ...  \n","4      the u house of representative ha passed the co...  \n","...                                                  ...  \n","10771  it appears some democrat who might have voted ...  \n","10772  editor note donna brazile a cnn contributor an...  \n","10773  clockthis article wa published more than 11 ye...  \n","10774  red-faced republican circling and preparing to...  \n","10775  deputy editor huffpost medium abc news ' this ...  \n","\n","[10776 rows x 11 columns]"],"text/html":["\n","  <div id=\"df-538e54d8-0436-4777-8602-b172066624ee\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>url</th>\n","      <th>q3</th>\n","      <th>perceived</th>\n","      <th>primary.topic</th>\n","      <th>secondary.topic</th>\n","      <th>democrat.vote</th>\n","      <th>republican.vote</th>\n","      <th>negatively_affected</th>\n","      <th>leaning_toward</th>\n","      <th>organization</th>\n","      <th>text_content</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>http://www.usatoday.com/story/news/nation/2013...</td>\n","      <td>other</td>\n","      <td>1</td>\n","      <td>Civil Rights</td>\n","      <td>Civil Rights</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>Neutral</td>\n","      <td>Neutral</td>\n","      <td>usatoday.com</td>\n","      <td>the acquittal of george zimmerman in the killi...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>http://www.huffingtonpost.com/2013/05/21/senat...</td>\n","      <td>News</td>\n","      <td>0</td>\n","      <td>Civil Rights</td>\n","      <td>Civil Rights</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>Neutral</td>\n","      <td>Neutral</td>\n","      <td>huffingtonpost.com</td>\n","      <td>copy chief huffpost washington -- the senate j...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>http://www.breitbart.com/Big-Government/2013/1...</td>\n","      <td>Opinion</td>\n","      <td>1</td>\n","      <td>Civil Rights</td>\n","      <td>Civil Rights</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>Neutral</td>\n","      <td>Neutral</td>\n","      <td>breitbart.com</td>\n","      <td>in a public statement that will be released th...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>http://www.cnn.com/2013/06/28/politics/obama-c...</td>\n","      <td>Opinion</td>\n","      <td>1</td>\n","      <td>Civil Rights</td>\n","      <td>Civil Rights</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>Neutral</td>\n","      <td>Neutral</td>\n","      <td>cnn.com</td>\n","      <td>rule let group like religious hospital school ...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>http://www.bbc.co.uk/news/technology-22213379</td>\n","      <td>Opinion</td>\n","      <td>1</td>\n","      <td>Civil Rights</td>\n","      <td>Civil Rights</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>Neutral</td>\n","      <td>Neutral</td>\n","      <td>bbc.co.uk</td>\n","      <td>the u house of representative ha passed the co...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>10771</th>\n","      <td>http://www.dailykos.com/story/2013/06/21/12177...</td>\n","      <td>News</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>Republican Scandals</td>\n","      <td>0.5</td>\n","      <td>-1.0</td>\n","      <td>Republican</td>\n","      <td>Democrat</td>\n","      <td>dailykos.com</td>\n","      <td>it appears some democrat who might have voted ...</td>\n","    </tr>\n","    <tr>\n","      <th>10772</th>\n","      <td>http://www.cnn.com/2013/08/16/opinion/brazile-...</td>\n","      <td>News</td>\n","      <td>0</td>\n","      <td>Republican Scandals</td>\n","      <td>Republican Scandals</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>Neutral</td>\n","      <td>Neutral</td>\n","      <td>cnn.com</td>\n","      <td>editor note donna brazile a cnn contributor an...</td>\n","    </tr>\n","    <tr>\n","      <th>10773</th>\n","      <td>http://www.washingtonpost.com/opinions/dana-mi...</td>\n","      <td>News</td>\n","      <td>1</td>\n","      <td>Republican Scandals</td>\n","      <td>Republican Scandals</td>\n","      <td>0.5</td>\n","      <td>-0.5</td>\n","      <td>Republican</td>\n","      <td>Democrat</td>\n","      <td>washingtonpost.com</td>\n","      <td>clockthis article wa published more than 11 ye...</td>\n","    </tr>\n","    <tr>\n","      <th>10774</th>\n","      <td>http://news.yahoo.com/republicans-hatred-obama...</td>\n","      <td>Opinion</td>\n","      <td>1</td>\n","      <td>Republican Scandals</td>\n","      <td>Republican Scandals</td>\n","      <td>0.5</td>\n","      <td>-0.5</td>\n","      <td>Republican</td>\n","      <td>Democrat</td>\n","      <td>news.yahoo.com</td>\n","      <td>red-faced republican circling and preparing to...</td>\n","    </tr>\n","    <tr>\n","      <th>10775</th>\n","      <td>http://www.huffingtonpost.com/2013/08/11/this-...</td>\n","      <td>Opinion</td>\n","      <td>1</td>\n","      <td>Republican Scandals</td>\n","      <td>Republican Scandals</td>\n","      <td>0.5</td>\n","      <td>-0.5</td>\n","      <td>Republican</td>\n","      <td>Democrat</td>\n","      <td>huffingtonpost.com</td>\n","      <td>deputy editor huffpost medium abc news ' this ...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>10776 rows × 11 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-538e54d8-0436-4777-8602-b172066624ee')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-538e54d8-0436-4777-8602-b172066624ee button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-538e54d8-0436-4777-8602-b172066624ee');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-06c791df-f027-45cc-904a-b69b42d037a6\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-06c791df-f027-45cc-904a-b69b42d037a6')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-06c791df-f027-45cc-904a-b69b42d037a6 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_cbe59c2f-41d8-4e54-80d5-e839bf6f5de0\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('content')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_cbe59c2f-41d8-4e54-80d5-e839bf6f5de0 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('content');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"content","summary":"{\n  \"name\": \"content\",\n  \"rows\": 10776,\n  \"fields\": [\n    {\n      \"column\": \"url\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5575,\n        \"samples\": [\n          \"http://www.huffingtonpost.com/2013/02/17/john-mccain-chuck-hagel_n_2706757.html\",\n          \"http://www.huffingtonpost.com/2013/04/28/white-house-correspondents-dinner-video-2013_n_3166295.html\",\n          \"http://www.usatoday.com/story/news/nation/2013/01/17/debt-ceiling-obama-lawmakers-can-sue/1841811/\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"q3\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"other\",\n          \"News\",\n          \"Opinion\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"perceived\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"primary.topic\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 14,\n        \"samples\": [\n          \"Gun Rights Regulation\",\n          \"International News\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"secondary.topic\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 14,\n        \"samples\": [\n          \"Gun Rights Regulation\",\n          \"International News\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"democrat.vote\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3865288089416671,\n        \"min\": -1.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1.0,\n          -0.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"republican.vote\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3512909001830467,\n        \"min\": -1.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1.0,\n          -1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"negatively_affected\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Neutral\",\n          \"Republican\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"leaning_toward\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Neutral\",\n          \"Democrat\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"organization\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 59,\n        \"samples\": [\n          \"usatoday.com\",\n          \"nbcnews.com\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"text_content\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4832,\n        \"samples\": [\n          \"by sharon begley new york nov 23 reuters - caught flat-footed by the challenge of building the financial-management and accounting part of the u.s. government 's new online marketplace for health insurance official rushed to hire a familiar contractor without seeking competing bid according to government procurement document reviewed by reuters . the document dated in august - le than two month before the opening of online marketplace established by president barack obama 's landmark healthcare law - showed the agency in charge had only recently learned that building the financial management function wa beyond it currently available resource . the center for medicare medicaid service cm document shed more light on the problem facing the agency a it worked on the marketplace established by the law commonly called obamacare and on it revelation this week that at least 30 percent of the marketplace is still being built . those problem and others have been revealed by congressional oversight investigator who released email and outside report that paint an administration scrambling to meet the technological challenge of the marketplace - and usually failing to do so . cm spokeswoman joanne peter said on friday and on saturday that representative of the agency were unavailable to comment on the contract or on an estimate of when the financial management part of the marketplace is expected to be finished . although the consumer-facing part of the marketplace the healthcare.gov website opened for enrollment on oct. 1 cm had a goal of jan. 1 2014 for the financial component of the system to be operational . the prospect of a delay ... even for a few day would result in severe consequence financial and other cm said in a justification and approval document explaining the lack of competition for the contract . the contract valued at nearly 12 million wa awarded on aug. 9 to novitas solution according to the document . novitas ha numerous contract with cm including to administer doctor and hospital claim in the federal medicare program for elderly american . the problem-plagued healthcare.gov is being worked on by contractor racing to fix it by the end of november so that people can enroll in insurance plan for 2014 under the 2010 affordable care act . the law aim to provide health care insurance to million of uninsured people . obama asked for fewer 'no-bid ' contract federal agency are normally required to solicit bid for work so a to get the best deal for taxpayer but can award a contract to a favored company in emergency a long a they document the urgency . a few week after taking office in 2009 obama issued a memorandum to government agency head ordering them to minimize the use of non-competitive contract calling them potentially wasteful inefficient subject to misuse . the procurement document made clear how crucial the financial function on the healthcare portal are . if payment were not made on time and accurately cm said operation of the marketplace and the affordable care act will certainly be jeopardized . financial management includes such function a transmitting premium payment to insurer . building that capability into the obamacare marketplace is already minimally two month overdue according to the august document . just a few week before the financial-management contract wa awarded according to email released last week by the house energy and commerce committee cm official were becoming increasingly concerned about the status of the federal insurance marketplace asking for assurance that the lead contractor wa not going to crash the plane at take-off . on tuesday cm 's deputy chief information officer henry chao author of the crash email told a congressional panel that 30 to 40 percent of the federal marketplace wa still under construction . invisible to consumer are what chao called the back office system . those include accounting and payment system to send premium to insurer and transfer fund to insurer that attract more than their share of customer with high medical cost . the no-bid contract awarded to novitas includes these system . novitas is a subsidiary of diversified service option which is wholly-owned by blue cross and blue shield of florida . asked about how novitas wa awarded the contract and the work it is doing florida blue spokesman mark wright said a company official told him we 're not going to be able to get into this right now . chao told a house energy and commerce subcommittee that cm and it contractor had focused on building healthcare.gov so it could launch on oct. 1 postponing construction of the financial management aspect of the system . the lead contractor on healthcare.gov the u.s. subsidiary of canada 's cgi group inc is also involved in building the financial management piece of the marketplace a company official said . the construction is a bigger problem than people realize said robert booz a vice-president and healthcare specialist at technology consultant gartner . everyone recognizes it 's going to be a problem in january he said referring to financial management . in the worst case if financial record are wrong then people who have signed up for and paid a monthly premium for insurance may be told incorrectly that they are not covered . editing by ross colvin and grant mccool at huffpost we believe that everyone need high-quality journalism but we understand that not everyone can afford to pay for expensive news subscription . that is why we are committed to providing deeply reported carefully fact-checked news that is freely accessible to everyone . whether you come to huffpost for update on the 2024 presidential race hard-hitting investigation into critical issue facing our country today or trending story that make you laugh we appreciate you . the truth is news cost money to produce and we are proud that we have never put our story behind an expensive paywall . would you join u to help keep our story free for all your contribution of a little a 2 will go a long way . ca n't afford to donate support huffpost by creating a free account and log in while you read . a american head to the poll in 2024 the very future of our country is at stake . at huffpost we believe that a free press is critical to creating well-informed voter . that 's why our journalism is free for everyone even though other newsroom retreat behind expensive paywalls . our journalist will continue to cover the twist and turn during this historic presidential election . with your help we 'll bring you hard-hitting investigation well-researched analysis and timely take you ca n't find elsewhere . reporting in this current political climate is a responsibility we do not take lightly and we thank you for your support . contribute a little a 2 to keep our news free for all . ca n't afford to donate support huffpost by creating a free account and log in while you read . dear huffpost reader thank you for your past contribution to huffpost . we are sincerely grateful for reader like you who help u ensure that we can keep our journalism free for everyone . the stake are high this year and our 2024 coverage could use continued support . would you consider becoming a regular huffpost contributor dear huffpost reader thank you for your past contribution to huffpost . we are sincerely grateful for reader like you who help u ensure that we can keep our journalism free for everyone . the stake are high this year and our 2024 coverage could use continued support . if circumstance have changed since you last contributed we hope youll consider contributing to huffpost once more . already contributed log in to hide these message .\",\n          \"speaking in ireland this week president obama stated that catholic school were divisive if town remain dividedif catholic have their school and building and protestant have theirs if we cant see ourselves in one another and fear or resentment are allowed to hardenthat too encourages division and discourages cooperation . on thursday the american catholic for religious freedom fired back on president obamas word to 2000 young people at the g8 summit stating president obamas anti-faith secular agenda wa shamefully on full display yesterday when he told the young people of northern ireland that catholic education and other faith-based school were divisive and an obstacle to peace . all american of faith should be outraged by these comment which clearly telegraph the president belief system and are in fact at their core even anti-american . american catholic for religious freedom point out that the medium ha completely ignored the story and add secular progressive like president obama ignore the truth that faith-based education is a component of the religious freedom guaranteed by the constitution . he cant bear the thought that catholic and parochial school not only teach important value but consistently produce better educational result at lower cost than america failing public school . the president troubling value are showing here in a way that demonstrate just how dangerous this administration is and how committed it is to eroding the right of all people of faith . and they note this is the same president who ha attempted to cram down anti-catholic doctrine via obamacare . it time american stood up for religious freedom for the u.s. constitution and against president obamas radical view about the place of faith in american life the group concludes . ben shapiro is editor-at-large of breitbart news and author of the new york time bestseller bully how the left culture of fear and intimidation silence america threshold edition january 8 2013. please let u know if you 're having issue with commenting . copyright 2024 breitbart\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":3}]},{"cell_type":"markdown","source":["## Presplitting Insights"],"metadata":{"id":"HZd_HMlCX492"}},{"cell_type":"code","source":["category_counts = content['leaning_toward'].value_counts()\n","\n","\n","category_counts"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hYVZeUyAX5I0","executionInfo":{"status":"ok","timestamp":1714363412865,"user_tz":240,"elapsed":8,"user":{"displayName":"Maya Krishnamoorthy","userId":"05037076869531260425"}},"outputId":"42fc680b-5bce-4612-b7f5-5d4664ac23df"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["leaning_toward\n","Neutral       6212\n","Democrat      2435\n","Republican    2129\n","Name: count, dtype: int64"]},"metadata":{},"execution_count":4}]},{"cell_type":"markdown","source":["# Split into train_content and test_content"],"metadata":{"id":"s2O7n7dfXx0x"}},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","\n","# Split the dataset into training and testing sets (80% training, 20% testing)\n","train_content, test_content = train_test_split(content, test_size=0.20, random_state=42)\n","\n","train_content\n","test_content\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":790},"id":"nIK3g3uhX17s","executionInfo":{"status":"ok","timestamp":1714363413793,"user_tz":240,"elapsed":934,"user":{"displayName":"Maya Krishnamoorthy","userId":"05037076869531260425"}},"outputId":"a9f105fa-4bbc-4644-a6d9-c9b9d9cf753b"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                                     url       q3  perceived  \\\n","10368  http://www.dailykos.com/story/2013/08/20/12325...  Opinion          1   \n","360    http://www.bbc.co.uk/news/world-us-canada-2541...     News          1   \n","4415   http://firstread.nbcnews.com/_news/2013/08/10/...  Opinion          0   \n","6890   http://www.dailykos.com/story/2013/11/13/12553...  Opinion          0   \n","33     http://news.yahoo.com/stores-free-rein-recoup-...     News          0   \n","...                                                  ...      ...        ...   \n","1880   http://www.cnn.com/2013/12/13/us/newtown-anniv...  Opinion          0   \n","8863   http://www.huffingtonpost.com/2013/11/03/berna...     News          1   \n","2614   http://www.dailykos.com/story/2013/06/22/12179...  Opinion          1   \n","9329   http://www.dailykos.com/story/2013/02/24/11892...    other          1   \n","8738   http://www.huffingtonpost.com/2013/09/25/samue...     News          0   \n","\n","             primary.topic        secondary.topic  democrat.vote  \\\n","10368  Republican Scandals                    NaN            0.0   \n","360      National Security           Civil Rights            0.0   \n","4415               Economy                    NaN           -1.0   \n","6890            Healthcare                    NaN            1.0   \n","33                 Economy           Civil Rights            0.0   \n","...                    ...                    ...            ...   \n","1880    Gun Related Crimes  Gun Rights Regulation            0.0   \n","8863                   NaN                    NaN            0.0   \n","2614          Civil Rights      National Security            0.5   \n","9329                   NaN                    NaN            0.0   \n","8738                   NaN                    NaN           -0.5   \n","\n","       republican.vote negatively_affected leaning_toward  \\\n","10368             -1.0          Republican       Democrat   \n","360                0.0             Neutral        Neutral   \n","4415              -1.0             Neutral        Neutral   \n","6890               0.0          Republican       Democrat   \n","33                 0.0             Neutral        Neutral   \n","...                ...                 ...            ...   \n","1880               0.0             Neutral        Neutral   \n","8863               0.0             Neutral        Neutral   \n","2614              -0.5          Republican       Democrat   \n","9329               0.0             Neutral        Neutral   \n","8738              -1.0          Republican       Democrat   \n","\n","                organization  \\\n","10368           dailykos.com   \n","360                bbc.co.uk   \n","4415   firstread.nbcnews.com   \n","6890            dailykos.com   \n","33            news.yahoo.com   \n","...                      ...   \n","1880                 cnn.com   \n","8863      huffingtonpost.com   \n","2614            dailykos.com   \n","9329            dailykos.com   \n","8738      huffingtonpost.com   \n","\n","                                            text_content  \n","10368  each said lepage talked about how obama could ...  \n","360    this video can not be played carney snowden sh...  \n","4415   profile section tv featured more from nbc foll...  \n","6890   the enrollment number are actually not that te...  \n","33     this friday dec. 13 2013 photo show a view of ...  \n","...                                                  ...  \n","1880   saturday is one-year anniversary of mass shoot...  \n","8863   senior justice reporter huffpost washington --...  \n","2614   folk 's greenwald is pissed with obama for fil...  \n","9329   legalzoom facebook httpwww.facebook.com ... tw...  \n","8738   deputy director of news analytics huffpost sam...  \n","\n","[2156 rows x 11 columns]"],"text/html":["\n","  <div id=\"df-5b37e0e6-e278-4094-a239-8678b8222ee1\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>url</th>\n","      <th>q3</th>\n","      <th>perceived</th>\n","      <th>primary.topic</th>\n","      <th>secondary.topic</th>\n","      <th>democrat.vote</th>\n","      <th>republican.vote</th>\n","      <th>negatively_affected</th>\n","      <th>leaning_toward</th>\n","      <th>organization</th>\n","      <th>text_content</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>10368</th>\n","      <td>http://www.dailykos.com/story/2013/08/20/12325...</td>\n","      <td>Opinion</td>\n","      <td>1</td>\n","      <td>Republican Scandals</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>-1.0</td>\n","      <td>Republican</td>\n","      <td>Democrat</td>\n","      <td>dailykos.com</td>\n","      <td>each said lepage talked about how obama could ...</td>\n","    </tr>\n","    <tr>\n","      <th>360</th>\n","      <td>http://www.bbc.co.uk/news/world-us-canada-2541...</td>\n","      <td>News</td>\n","      <td>1</td>\n","      <td>National Security</td>\n","      <td>Civil Rights</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>Neutral</td>\n","      <td>Neutral</td>\n","      <td>bbc.co.uk</td>\n","      <td>this video can not be played carney snowden sh...</td>\n","    </tr>\n","    <tr>\n","      <th>4415</th>\n","      <td>http://firstread.nbcnews.com/_news/2013/08/10/...</td>\n","      <td>Opinion</td>\n","      <td>0</td>\n","      <td>Economy</td>\n","      <td>NaN</td>\n","      <td>-1.0</td>\n","      <td>-1.0</td>\n","      <td>Neutral</td>\n","      <td>Neutral</td>\n","      <td>firstread.nbcnews.com</td>\n","      <td>profile section tv featured more from nbc foll...</td>\n","    </tr>\n","    <tr>\n","      <th>6890</th>\n","      <td>http://www.dailykos.com/story/2013/11/13/12553...</td>\n","      <td>Opinion</td>\n","      <td>0</td>\n","      <td>Healthcare</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>Republican</td>\n","      <td>Democrat</td>\n","      <td>dailykos.com</td>\n","      <td>the enrollment number are actually not that te...</td>\n","    </tr>\n","    <tr>\n","      <th>33</th>\n","      <td>http://news.yahoo.com/stores-free-rein-recoup-...</td>\n","      <td>News</td>\n","      <td>0</td>\n","      <td>Economy</td>\n","      <td>Civil Rights</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>Neutral</td>\n","      <td>Neutral</td>\n","      <td>news.yahoo.com</td>\n","      <td>this friday dec. 13 2013 photo show a view of ...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1880</th>\n","      <td>http://www.cnn.com/2013/12/13/us/newtown-anniv...</td>\n","      <td>Opinion</td>\n","      <td>0</td>\n","      <td>Gun Related Crimes</td>\n","      <td>Gun Rights Regulation</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>Neutral</td>\n","      <td>Neutral</td>\n","      <td>cnn.com</td>\n","      <td>saturday is one-year anniversary of mass shoot...</td>\n","    </tr>\n","    <tr>\n","      <th>8863</th>\n","      <td>http://www.huffingtonpost.com/2013/11/03/berna...</td>\n","      <td>News</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>Neutral</td>\n","      <td>Neutral</td>\n","      <td>huffingtonpost.com</td>\n","      <td>senior justice reporter huffpost washington --...</td>\n","    </tr>\n","    <tr>\n","      <th>2614</th>\n","      <td>http://www.dailykos.com/story/2013/06/22/12179...</td>\n","      <td>Opinion</td>\n","      <td>1</td>\n","      <td>Civil Rights</td>\n","      <td>National Security</td>\n","      <td>0.5</td>\n","      <td>-0.5</td>\n","      <td>Republican</td>\n","      <td>Democrat</td>\n","      <td>dailykos.com</td>\n","      <td>folk 's greenwald is pissed with obama for fil...</td>\n","    </tr>\n","    <tr>\n","      <th>9329</th>\n","      <td>http://www.dailykos.com/story/2013/02/24/11892...</td>\n","      <td>other</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>Neutral</td>\n","      <td>Neutral</td>\n","      <td>dailykos.com</td>\n","      <td>legalzoom facebook httpwww.facebook.com ... tw...</td>\n","    </tr>\n","    <tr>\n","      <th>8738</th>\n","      <td>http://www.huffingtonpost.com/2013/09/25/samue...</td>\n","      <td>News</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>-0.5</td>\n","      <td>-1.0</td>\n","      <td>Republican</td>\n","      <td>Democrat</td>\n","      <td>huffingtonpost.com</td>\n","      <td>deputy director of news analytics huffpost sam...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2156 rows × 11 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5b37e0e6-e278-4094-a239-8678b8222ee1')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5b37e0e6-e278-4094-a239-8678b8222ee1 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5b37e0e6-e278-4094-a239-8678b8222ee1');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-68d603e3-b7bb-4113-ace1-a1f5c610c908\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-68d603e3-b7bb-4113-ace1-a1f5c610c908')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-68d603e3-b7bb-4113-ace1-a1f5c610c908 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_13142101-3cba-4865-a858-8cefc3612af4\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('test_content')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_13142101-3cba-4865-a858-8cefc3612af4 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('test_content');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"test_content","summary":"{\n  \"name\": \"test_content\",\n  \"rows\": 2156,\n  \"fields\": [\n    {\n      \"column\": \"url\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1965,\n        \"samples\": [\n          \"http://www.breitbart.com/Big-Peace/2013/09/02/Putin-Syria-gays\",\n          \"http://firstread.nbcnews.com/_news/2013/06/17/19003950-pro-obama-group-airs-tv-ad-defending-health-care-law\",\n          \"http://www.usatoday.com/story/gameon/2013/02/17/president-obama-tiger-woods-golf/1926147/\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"q3\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Opinion\",\n          \"News\",\n          \"other\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"perceived\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"primary.topic\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 14,\n        \"samples\": [\n          \"Drugs\",\n          \"Education\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"secondary.topic\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 14,\n        \"samples\": [\n          \"Democrat Scandals\",\n          \"Gay Rights\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"democrat.vote\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.393369194888532,\n        \"min\": -1.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          -1.0,\n          -0.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"republican.vote\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.36245039245178184,\n        \"min\": -1.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"negatively_affected\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Republican\",\n          \"Neutral\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"leaning_toward\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Democrat\",\n          \"Neutral\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"organization\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 45,\n        \"samples\": [\n          \"cityroom.blogs.nytimes.com\",\n          \"latino.foxnews.com\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"text_content\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1670,\n        \"samples\": [\n          \"id like to congratulate the voter of australia for doing what the voter of america should have done in 2012 australia conservative leader tony abbott swept into office in national election on saturday a voter punished the outgoing labor government for six year of turbulent rule and for failing to maximize the benefit of a now fading mining boom . abbott a former boxer rhodes scholar and trainee priest promised to restore political stability cut tax and crack down on asylum seeker arriving by boat . from today i declare that australia is under new management and australia is once more open for business abbott told jubilant supporter in sydney . america on the other hand will not be open for business until 2017 at the earliest . it always a mistake to overstate the similarity between different national political environment the difference are profound in even the most similar country . but there are some sharp parallel to be drawn here particularly on the need for pro-growth tax cut and the squandering of a natural resource revolution . obamas war on energy ha some similarity to the way australian seem to feel their mining boom wa wasted the election wa been pitched a a choice on who is best to lead the a1.5 trillion 1.4 trillion economy a it adjusts to an end to a prolonged mining investment boom fuelled by china demand for it abundant natural resource . abbott 55 built up a strong opinion poll lead on the back of promise to rein in government spending scrap an unpopular tax on carbon emission and stop the flow of refugee boat arriving in australia northwest . his campaign had support from medium magnate rupert murdoch and his australian newspaper which have urged voter to reject rudd labor government . australia other major newspaper group fairfax also called for a change of government saying rudd had painted abbotts planned spending cut a dangerous european-style austerity and said his government wa best placed to manage an economy that is slowing but remains the envy of much of the developed world . this is really a golden moment for any aspiring capitalist economy to eat america lunch . were year away from being remotely competitive . the obama democrat are hell-bent to double down on his failed policy not just due to ideological rigidity but because obamas ego will never allow him to admit he been fundamentally wrong about everything for five year . and the american ruling class ha become quite obsessed with using socialist policy to build invulnerable voting coalition of government dependent . they take obamas re-election a a sign that the american electorate is reasonably comfortable with the new normal of double-digit real unemployment expensive gas a declining standard of living out-of-control government spending and all the rest of it . the bar of economic leadership wa lowered to accommodate president obama the ruling class doesnt think it will be raised any time soon . now is your moment aspiring capitalist tiger of the world . the american workforce is buried under food stamp and long-term disability check employer are wrapped in chain of regulation held tightly shut with the padlock of obamacare . no corporation in it right mind would relocate into the american quagmire of soaring corporate tax with class-warfare battle cry signaling even worse to come high labor cost and crushing regulatory burden . every ceo in the world watched democrat march apple inc. executive into a show trial and berate them for daring to keep their offshore revenue offshore instead of bringing it home so uncle sam could cut himself a thick slice . they all watched obama and his party present irresponsible government deficit a an argument for tax increase rather than government reform . a weakened america ha turned away from it bedrock principle of economic liberty . a huge void is waiting to be filled . please let u know if you 're having issue with commenting . copyright 2024 breitbart\",\n          \"two senior u tax official have denied the extra scrutiny given to conservative group seeking tax exemption ahead of the 2012 election wa motivated by partisan bias . outgoing internal revenue service head steven miller told a congressional hearing the mistake were an effort to handle the flood of application . and a watchdog official said he found no evidence of outside pressure . but a top republican said the practice amounted to political intimidation . mr miller and another top staff member in the internal revenue service irs have resigned over the matter . democratic president barack obama ha denounced the practice a unacceptable and attorney general eric holder ha said the fbi ha launched a criminal inquiry . the hearing in the house way and mean committee came at the end of a difficult week for the white house which ha also faced new question about a deadly assault on the u diplomatic mission in libya and fended off attack on the seizure of reporter ' phone record . friday 's wa the first in a series of congressional hearing on the tax affair - correspondent say republican hope to use it to discredit mr obama just month into his second term . i want to apologise on behalf of the internal revenue service for the mistake that we made and the poor service we provided mr miller told the panel . partisanship - and even the perception of partisanship - ha no place at the internal revenue service . j russell george the treasury department inspector general for tax administration told the committee that he had not seen evidence irs official were under political pressure to target conservative group . but leading republican on the committee said the misconduct wa not a mere management lapse . the reality is this is not a personnel problem . this is a problem of the irs being too large too powerful too intrusive and too abusive of honest hardworking taxpayer house way and mean committee chairman dave camp said at the opening of friday 's hearing . the michigan republican said the affair appeared to be just one case of a culture of cover-up in the irs . it seems like the truth is hidden from the american people just long enough to make it through an election mr camp said . while mr obama 's democrat have been reluctant to defend the tax agency the senior democrat on the committee sander levin warned his colleague not to allow legitimate inquiry into problem at the irs to devolve into a political brawl . for his part mr obama attempted to refocus on the economy with a trip to baltimore maryland in which he said lawmaker should spend their time on helping people get back to work . our focus can not drift mr obama said . the irs ha acknowledged that beginning in 2010 staff in a cincinnati ohio branch office delayed the filing for tax-exempt status of group that had word such a tea party or patriot in their name or that otherwise indicated their conservative orientation . mr miller testified on friday that while the practice of maintaining a list of keywords that flagged conservative group for extra review wa intolerable it wa a mistake and had merely been put together by civil servant trying to work more efficiently . the practice of extra screening began in response to a supreme court ruling that loosened campaign finance rule mr miller said . during question the outgoing irs head said the agent did not use search word associated with liberal cause - like progress or organising . the number of application from so-called social welfare group seeking tax-exempt status nearly doubled from 2009-2012 to 3300 a year mr george 's report found . under u tax law the group were entitled to a tax exemption so long a campaigning wa not their primary activity . amid report some of the group were violating that threshold the irs deemed some level of review appropriate . the list of watch word wa assembled by a determination unit based in cincinnati and there seemed to be little or no supervisory review of the list inspector general mr george told the committee . the determination unit requested unnecessary information because of a lack of managerial review at all level mr russell said . we concluded that determination unit specialist lacked knowledge of what activity are allowed . the irs is an independent agency within the treasury department . mr george 's investigation revealed this week found that 296 group had been subjected to additional auditing . in those case the irs may have asked for list of donor the group ' position on a range of issue and whether the group ' senior member intended to run for public office . many of the applicant faced considerable delay in obtaining tax-exempt status but none were turned down he added . in addition to mr miller joseph grant commissioner of the irs 's tax-exempt and government-entities division said on thursday that he wa stepping down within a month . obama seek to defuse controversy u tax chief resigns amid scandal pr for benghazi obama say tax bias 'intolerable ' oj simpson nfl star cleared in trial of the century dy aged 76 watch oj simpson 's notorious 1994 car chase . videowatch oj simpson 's notorious 1994 car chase bowen israel denies famine loom in gaza but evidence is overwhelming south korean leader learns political cost of a spring onion arizona push abortion to centre stage of 2024 how gang violence gripped a tourist haven all you need to know for tonight 's bafta game award vietnamese billionaire sentenced to death for 44bn fraud the indian men traumatised by fighting for russia parched and shrinking - vital moroccan dam dry up will guyana 's record growth benefit people in remote essequibo watch best moment from solar eclipse . videowatch best moment from solar eclipse should you be worried about getting enough protein dr julia ravey and dr ella hubber unpick this macronutrient to find out what it doe in our body ' i 'm not difficult ... i just can not take mediocrity ' explore the meteoric rise to fame and troubled personal life of the comedy pioneer peter seller ' i wa freaking out i knew i wa in trouble ' how did australian holly deane-johns end up in a notorious thai prison unearthing the fascinating story of our ancestor britain 's biggest dig give a glimpse into the life of the rich and poor of georgian london 2024 bbc . the bbc is not responsible for the content of external site . read about our approach to external linking .\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":5}]},{"cell_type":"markdown","source":["## train_content and test_content Insights"],"metadata":{"id":"UiYnZqWMYBBg"}},{"cell_type":"code","source":["category_counts = train_content['leaning_toward'].value_counts()\n","\n","\n","category_counts"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RYwAXnxOYBMS","executionInfo":{"status":"ok","timestamp":1714363413793,"user_tz":240,"elapsed":11,"user":{"displayName":"Maya Krishnamoorthy","userId":"05037076869531260425"}},"outputId":"7c475d4b-e1ab-488e-c055-90835c04e191"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["leaning_toward\n","Neutral       4973\n","Democrat      1926\n","Republican    1721\n","Name: count, dtype: int64"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["category_counts = test_content['leaning_toward'].value_counts()\n","\n","\n","category_counts"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4HDmTYzbYI-4","executionInfo":{"status":"ok","timestamp":1714363416933,"user_tz":240,"elapsed":235,"user":{"displayName":"Maya Krishnamoorthy","userId":"05037076869531260425"}},"outputId":"7cc2f524-d4e4-4d2a-d138-14eb03e2e11c"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["leaning_toward\n","Neutral       1239\n","Democrat       509\n","Republican     408\n","Name: count, dtype: int64"]},"metadata":{},"execution_count":8}]},{"cell_type":"markdown","source":["# Stratified DummyClassifier on the Test Set (Pre-Resampling)"],"metadata":{"id":"p2s33VdmYLMx"}},{"cell_type":"code","source":["import pandas as pd\n","from sklearn.dummy import DummyClassifier\n","from sklearn.metrics import accuracy_score, classification_report\n","\n","# Assuming 'leaning_toward' is your target variable\n","X_train = train_content.drop(columns=['leaning_toward'])  # Adjust if you have specific features in mind\n","y_train = train_content['leaning_toward']\n","\n","X_test = test_content.drop(columns=['leaning_toward'])  # Adjust if you have specific features in mind\n","y_test = test_content['leaning_toward']\n","\n","# Create a DummyClassifier\n","# You can choose the strategy: \"most_frequent\", \"stratified\", \"uniform\", or \"constant\"\n","dummy = DummyClassifier(strategy='stratified', random_state=42)\n","\n","# Train the classifier\n","dummy.fit(X_train, y_train)\n","\n","# Make predictions on the test set\n","y_pred = dummy.predict(X_test)\n","\n","# Evaluate the classifier\n","accuracy = accuracy_score(y_test, y_pred)\n","report = classification_report(y_test, y_pred)\n","\n","print(\"Accuracy:\", accuracy)\n","print(\"Classification Report:\\n\", report)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9TQobMmQYVCj","executionInfo":{"status":"ok","timestamp":1714363418120,"user_tz":240,"elapsed":204,"user":{"displayName":"Maya Krishnamoorthy","userId":"05037076869531260425"}},"outputId":"0603317d-b5a9-4ffe-bc65-f7624600206b"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.4025974025974026\n","Classification Report:\n","               precision    recall  f1-score   support\n","\n","    Democrat       0.21      0.20      0.20       509\n","     Neutral       0.56      0.56      0.56      1239\n","  Republican       0.16      0.17      0.16       408\n","\n","    accuracy                           0.40      2156\n","   macro avg       0.31      0.31      0.31      2156\n","weighted avg       0.40      0.40      0.40      2156\n","\n"]}]},{"cell_type":"markdown","source":["# Resampling so equal number of every class"],"metadata":{"id":"bToCeGEAYW9G"}},{"cell_type":"code","source":["# Function to resample a dataset based on the 'leaning_toward' column\n","def resample_data(df):\n","    class_counts = df['leaning_toward'].value_counts()\n","    min_class_count = class_counts.min()\n","\n","    # Resample each class to the minimum class size found in this dataset\n","    resampled_dfs = []\n","    for class_label in class_counts.index:\n","        resampled_class_df = df[df['leaning_toward'] == class_label].sample(min_class_count, random_state=42)\n","        resampled_dfs.append(resampled_class_df)\n","\n","    # Combine the resampled classes into a new balanced DataFrame\n","    balanced_df = pd.concat(resampled_dfs)\n","    return balanced_df\n","\n","# Resample training and testing datasets separately\n","balanced_train_content = resample_data(train_content)\n","balanced_test_content = resample_data(test_content)\n","\n","balanced_train_content"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":895},"id":"vs_WA124YZzr","executionInfo":{"status":"ok","timestamp":1714363420348,"user_tz":240,"elapsed":219,"user":{"displayName":"Maya Krishnamoorthy","userId":"05037076869531260425"}},"outputId":"4f794f44-b206-4324-8bc4-d2b0b817b115"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                                     url       q3  perceived  \\\n","843    http://firstread.nbcnews.com/_news/2013/01/16/...     News          1   \n","7272   http://www.nbcnews.com/health/instead-er-param...    other          0   \n","7112   http://www.dailykos.com/story/2013/10/30/12514...  Opinion          1   \n","10754  http://www.huffingtonpost.com/2013/03/13/obama...  Opinion          0   \n","9360   http://www.usatoday.com/story/news/nation/2013...     News          0   \n","...                                                  ...      ...        ...   \n","9800   http://www.breitbart.com/Big-Government/2013/0...  Opinion          1   \n","521    http://www.dailykos.com/story/2013/01/31/11837...  Opinion          0   \n","7276   http://www.breitbart.com/Big-Government/2013/0...  Opinion          0   \n","3810   http://www.huffingtonpost.com/2013/05/20/irs-s...     News          0   \n","7084   http://www.breitbart.com/Big-Government/2013/0...  Opinion          1   \n","\n","               primary.topic      secondary.topic  democrat.vote  \\\n","843    Gun Rights Regulation              Economy            0.0   \n","7272              Healthcare                  NaN            0.0   \n","7112              Healthcare                  NaN            0.0   \n","10754             Healthcare  Republican Scandals           -0.5   \n","9360                     NaN                  NaN            0.0   \n","...                      ...                  ...            ...   \n","9800                     NaN                  NaN           -0.5   \n","521               Healthcare    Democrat Scandals           -0.5   \n","7276              Healthcare                  NaN           -0.5   \n","3810       Democrat Scandals                  NaN           -1.0   \n","7084              Healthcare                  NaN           -0.5   \n","\n","       republican.vote negatively_affected leaning_toward  \\\n","843                0.0             Neutral        Neutral   \n","7272               0.0             Neutral        Neutral   \n","7112               0.0             Neutral        Neutral   \n","10754             -0.5             Neutral        Neutral   \n","9360               0.0             Neutral        Neutral   \n","...                ...                 ...            ...   \n","9800               0.5            Democrat     Republican   \n","521                0.5            Democrat     Republican   \n","7276               0.5            Democrat     Republican   \n","3810              -0.5            Democrat     Republican   \n","7084               0.5            Democrat     Republican   \n","\n","                organization  \\\n","843    firstread.nbcnews.com   \n","7272             nbcnews.com   \n","7112            dailykos.com   \n","10754     huffingtonpost.com   \n","9360            usatoday.com   \n","...                      ...   \n","9800           breitbart.com   \n","521             dailykos.com   \n","7276           breitbart.com   \n","3810      huffingtonpost.com   \n","7084           breitbart.com   \n","\n","                                            text_content  \n","843    profile section tv featured more from nbc foll...  \n","7272   profile section tv featured more from nbc foll...  \n","7112   2013 american value survey .pdf by prri sept 2...  \n","10754  washington president barack obama is conceding...  \n","9360   if you 're a pale 17-year-old in illinois get ...  \n","...                                                  ...  \n","9800   bachmann r-mn is currently the target of an ag...  \n","521    i wa a stalwart all through the past four year...  \n","7276   a simple fact is missing from all the medium h...  \n","3810   this year we are facing the most consequential...  \n","7084   when establishment republican and their democr...  \n","\n","[5163 rows x 11 columns]"],"text/html":["\n","  <div id=\"df-c7394723-04d4-447d-bc91-42b6e808fc10\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>url</th>\n","      <th>q3</th>\n","      <th>perceived</th>\n","      <th>primary.topic</th>\n","      <th>secondary.topic</th>\n","      <th>democrat.vote</th>\n","      <th>republican.vote</th>\n","      <th>negatively_affected</th>\n","      <th>leaning_toward</th>\n","      <th>organization</th>\n","      <th>text_content</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>843</th>\n","      <td>http://firstread.nbcnews.com/_news/2013/01/16/...</td>\n","      <td>News</td>\n","      <td>1</td>\n","      <td>Gun Rights Regulation</td>\n","      <td>Economy</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>Neutral</td>\n","      <td>Neutral</td>\n","      <td>firstread.nbcnews.com</td>\n","      <td>profile section tv featured more from nbc foll...</td>\n","    </tr>\n","    <tr>\n","      <th>7272</th>\n","      <td>http://www.nbcnews.com/health/instead-er-param...</td>\n","      <td>other</td>\n","      <td>0</td>\n","      <td>Healthcare</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>Neutral</td>\n","      <td>Neutral</td>\n","      <td>nbcnews.com</td>\n","      <td>profile section tv featured more from nbc foll...</td>\n","    </tr>\n","    <tr>\n","      <th>7112</th>\n","      <td>http://www.dailykos.com/story/2013/10/30/12514...</td>\n","      <td>Opinion</td>\n","      <td>1</td>\n","      <td>Healthcare</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>Neutral</td>\n","      <td>Neutral</td>\n","      <td>dailykos.com</td>\n","      <td>2013 american value survey .pdf by prri sept 2...</td>\n","    </tr>\n","    <tr>\n","      <th>10754</th>\n","      <td>http://www.huffingtonpost.com/2013/03/13/obama...</td>\n","      <td>Opinion</td>\n","      <td>0</td>\n","      <td>Healthcare</td>\n","      <td>Republican Scandals</td>\n","      <td>-0.5</td>\n","      <td>-0.5</td>\n","      <td>Neutral</td>\n","      <td>Neutral</td>\n","      <td>huffingtonpost.com</td>\n","      <td>washington president barack obama is conceding...</td>\n","    </tr>\n","    <tr>\n","      <th>9360</th>\n","      <td>http://www.usatoday.com/story/news/nation/2013...</td>\n","      <td>News</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>Neutral</td>\n","      <td>Neutral</td>\n","      <td>usatoday.com</td>\n","      <td>if you 're a pale 17-year-old in illinois get ...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>9800</th>\n","      <td>http://www.breitbart.com/Big-Government/2013/0...</td>\n","      <td>Opinion</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>-0.5</td>\n","      <td>0.5</td>\n","      <td>Democrat</td>\n","      <td>Republican</td>\n","      <td>breitbart.com</td>\n","      <td>bachmann r-mn is currently the target of an ag...</td>\n","    </tr>\n","    <tr>\n","      <th>521</th>\n","      <td>http://www.dailykos.com/story/2013/01/31/11837...</td>\n","      <td>Opinion</td>\n","      <td>0</td>\n","      <td>Healthcare</td>\n","      <td>Democrat Scandals</td>\n","      <td>-0.5</td>\n","      <td>0.5</td>\n","      <td>Democrat</td>\n","      <td>Republican</td>\n","      <td>dailykos.com</td>\n","      <td>i wa a stalwart all through the past four year...</td>\n","    </tr>\n","    <tr>\n","      <th>7276</th>\n","      <td>http://www.breitbart.com/Big-Government/2013/0...</td>\n","      <td>Opinion</td>\n","      <td>0</td>\n","      <td>Healthcare</td>\n","      <td>NaN</td>\n","      <td>-0.5</td>\n","      <td>0.5</td>\n","      <td>Democrat</td>\n","      <td>Republican</td>\n","      <td>breitbart.com</td>\n","      <td>a simple fact is missing from all the medium h...</td>\n","    </tr>\n","    <tr>\n","      <th>3810</th>\n","      <td>http://www.huffingtonpost.com/2013/05/20/irs-s...</td>\n","      <td>News</td>\n","      <td>0</td>\n","      <td>Democrat Scandals</td>\n","      <td>NaN</td>\n","      <td>-1.0</td>\n","      <td>-0.5</td>\n","      <td>Democrat</td>\n","      <td>Republican</td>\n","      <td>huffingtonpost.com</td>\n","      <td>this year we are facing the most consequential...</td>\n","    </tr>\n","    <tr>\n","      <th>7084</th>\n","      <td>http://www.breitbart.com/Big-Government/2013/0...</td>\n","      <td>Opinion</td>\n","      <td>1</td>\n","      <td>Healthcare</td>\n","      <td>NaN</td>\n","      <td>-0.5</td>\n","      <td>0.5</td>\n","      <td>Democrat</td>\n","      <td>Republican</td>\n","      <td>breitbart.com</td>\n","      <td>when establishment republican and their democr...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5163 rows × 11 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c7394723-04d4-447d-bc91-42b6e808fc10')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c7394723-04d4-447d-bc91-42b6e808fc10 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c7394723-04d4-447d-bc91-42b6e808fc10');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-5aed61f4-2f96-4b26-b2be-8be5b4570d90\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5aed61f4-2f96-4b26-b2be-8be5b4570d90')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-5aed61f4-2f96-4b26-b2be-8be5b4570d90 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_a2961879-2f83-4690-a2c4-d3797a78ce22\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('balanced_train_content')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_a2961879-2f83-4690-a2c4-d3797a78ce22 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('balanced_train_content');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"balanced_train_content","summary":"{\n  \"name\": \"balanced_train_content\",\n  \"rows\": 5163,\n  \"fields\": [\n    {\n      \"column\": \"url\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3850,\n        \"samples\": [\n          \"http://www.usatoday.com/story/theoval/2013/04/21/obama-boston-marathon-bombing-national-security-council/2100707/\",\n          \"http://news.yahoo.com/obama--%E2%80%98i-ve-got-one-more-campaign-in-me--for-obamacare-023741313.html\",\n          \"http://www.cnn.com/2013/10/01/opinion/currinder-huder-shutdown/index.html\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"q3\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"News\",\n          \"other\",\n          \"Opinion\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"perceived\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"primary.topic\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 14,\n        \"samples\": [\n          \"Drugs\",\n          \"Democrat Scandals\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"secondary.topic\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 14,\n        \"samples\": [\n          \"Healthcare\",\n          \"Education\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"democrat.vote\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4629910550208697,\n        \"min\": -1.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          -0.5,\n          0.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"republican.vote\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.40965715984431145,\n        \"min\": -1.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          -0.5,\n          0.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"negatively_affected\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Neutral\",\n          \"Republican\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"leaning_toward\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Neutral\",\n          \"Democrat\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"organization\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 52,\n        \"samples\": [\n          \"worldnews.nbcnews.com\",\n          \"science.nbcnews.com\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"text_content\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3297,\n        \"samples\": [\n          \"a new book claim that president barack obamas adviser explored the possibility of replacing vice president joe biden with hillary clinton on the president re-election ticket . excerpt from double down by mark halperin and john heilemann add to rumor going back to shortly after democrat took an electoral beating in the 2010 midterm election . obama adviser led by then-white house chief of staff william m. daley reportedly conducted extensive focus group and polling well into 2011. however neither biden nor obama were actually part of these conversation according to the book . for his part daley confirms his role but he say it wa only due diligence and never advanced beyond standard research . i wa vocal about looking into a whole bunch of thing and this wa one of them daley told the new york time . you have to remember at that point the president wa in awful shape so we were like holy christ what do we do in an interview on cbs this morning daley downplayed the idea . not for a moment wa there a serious discussion of dumping biden for clinton but he did say it wa looked at . anybody who would have brought this idea to the president in the oval office in my opinion probably would have been thrown out immediately daley added . the white house also issued a denial friday morning . another reason the campaign probably backed off the idea it did n't seem like it 'd be a game changer in the election.when the research came back near the end of the year it suggested that adding clinton to the ticket wouldnt materially improve obamas odds halperin and heilemann write in an advance copy of the book obtained by the time . biden had dodged a bullet he never saw coming and never would know anything about if the obamas could keep a secret.though uncommon it 's not entirely unheard of for president to replace running mate in the second term . thomas jefferson wa the first president to do so . franklin roosevelt changed vice president twice during his four term in office . richard nixon also replaced spiro agnew a vice president because he resigned . in recent year there ha been rampant speculation about new running mate during campaign . there wa much talk in the 1992 campaign about george h.w . bush replacing dan quayle . and george w. bush reportedly briefly considered replacing dick cheney on the 2004 ticket . still the admission represents a powerful reversal of relation between clinton and obama who were bitter rival during the 2008 democratic presidential primary . in fact in another exclusive released on thursday politico reporter jonathan allen revealed in his new book hrc that obama asked clinton to stay on a secretary of state beyond 2012 . however clinton rebuffed obamas request saying it wa time for her to take a break from public office . of course no matter how much the relationship between obama and hillary ha warmed his relationship with bill clinton ha reportedly remained strained . in their book halperin and heilemann report that obama could barely endure spending time with the often exhausting ex-president even a he realized that clinton counsel wa essential in obamas re-election effort . the book claim that obama and clinton were not even able to finish a round of golf together . afterward when a white house aide asked how the golf game went obama grimaced and replied i like him in dos ' the book claim . biden also reportedly got under team obamas skin from his effort to boost his own expected 2016 presidential run and for his impromptu announcement in support of same-sex marriage . we cant have side deal obama adviser david plouffe reportedly told biden after finding out the vice president wa trying to establish future fundraising commitment from obama campaign donor . o.j . simpson one of the most infamous figure in u.s. history had been battling cancer . with the ncaa tournament behind u here 's an updated look at yahoo sport ' first- and second-round projection for the 2024 nba draft . cancelling student debt is a windfall for the borrower who benefit but taxpayer foot the bill . the 2025 toyota 4runner is finally arriving this fall with a full lineup including returning trd pro and new trailhunter . hybrid power now available . in a flip of the usual priority senate republican seem likely to kill a set of tax cut that have already passed the house and are broadly popular . here 's why . the 2025 toyota 4runner look like it 'll be a clear improvement to it predecessor . though looking at the spec it may pose a problem for the land cruiser the league is investigating jontay porter over several betting irregularity in which player prop on him all hit after he left game early . what selection doe your team have what area should it address who 's the dream fantasy pick we cover all that and more for every franchise right here . the fed is aiming to avoid a repeat of the double inflation episode that rocked the 1970s and early 1980s . alex rodriguez and marc lore reportedly planned to bring the timberwolves below the projected luxury tax threshold next season which left glen taylor very concerned . we continue our 'mock draft monday ' series with pff 's trevor sikkema joining matt harmon the pod . sikkema provides his five favorite pick from his latest mock draft a well a his least favorite pick . the pff draft expert also share what go into his methodology when crafting a mock especially a inch even closer to night one of the draft . rashee rice should have taken a lesson from recent history . yahoo sport ' nate tice ha drake maye at no . 1 caleb williams at no . 2 and a whole lot of intrigue after in a deep class at wide receiver offensive line and cornerback . these are n't household name but there are plenty of quality if imperfect prospect that should be available on day 2 of the nfl draft and beyond . 2025 ram 1500 full-size pickup truck now ha fuel economy number and the hurricane inline-six delivers better number than the v8 it replaces . it 's close between the top two for yahoo sport ' nate tice and there are a ton of other guy worth getting excited about in a deep class . ohtani ha been interviewed by the fed a part of the investigation per the new york time . dan wetzel ross dellenger si pat forde discus scott drew being a top candidate at kentucky the possibility of a college football super league the kalen deboer era for alabama football and deion sander recruiting method which team will wind up in the nba 's play-in tournament which contender is the most vulnerable to a first-round upset our writer weigh in with a week to go in the regular season . holiday is declining his 37.3 million player option for 2024-2025 .\",\n          \"one premier destination is off-limits this year however . a few week ago the obama administration announced it wa suspending public self-guided tour of the white house a a result of the automatic sequester cut that the administration proposed in 2011. while america student stand outside the white house fence the first daughter sasha and malia are enjoying spring break with friend at the atlantis resort on paradise island in the bahamas . breitbart news matt boyle broke the news monday morning that numerous source have reported seeing the first daughter in the bahamas this weekend . presumably the obamas are paying the cost of the resort out of their own pocket . the robust secret service detail that must accompany the first daughter however is funded by taxpayer . the principal reason the white house canceled public tour wa to save money on secret service staff . the white house reported that suspending the tour would save 74000 a week . other report have put the saving at just 18000 a week . whichever the true amount the secret service detail necessary to protect the first daughter on their spring break could likely have been used to keep the white house open to the rest of america school child . judicial watch reported that malia obamas spring break in mexico last year cost taxpayer over 115000. that amount would cover 2-6 week of white house tour . at the very least it would ensure that this spring break thousand of america student could cap their trip to dc with a uniquely american traditiona tour of the white house . please let u know if you 're having issue with commenting . copyright 2024 breitbart\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["balanced_test_content"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":964},"id":"rM8THboFYgfl","executionInfo":{"status":"ok","timestamp":1714360635663,"user_tz":240,"elapsed":243,"user":{"displayName":"Maya Krishnamoorthy","userId":"05037076869531260425"}},"outputId":"f1e2f50c-a68c-4fd8-b6c6-277d435fe5d9"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                                    url       q3  perceived  \\\n","9956  http://www.dailykos.com/story/2013/01/24/11817...  Opinion          1   \n","9922  http://www.dailykos.com/story/2013/03/20/11956...  Opinion          0   \n","2167  http://www.washingtonpost.com/opinions/david-i...     News          0   \n","9452  http://www.cnn.com/2013/12/03/living/states-of...    other          1   \n","7032  http://video.foxnews.com/v/2749366381001/congr...  Opinion          1   \n","...                                                 ...      ...        ...   \n","2625  http://www.washingtonpost.com/world/national-s...  Opinion          0   \n","1511  http://www.breitbart.com/Big-Peace/2013/04/18/...     News          0   \n","3281  http://www.cnn.com/2013/11/27/opinion/navarret...  Opinion          1   \n","6992  http://www.usatoday.com/story/news/politics/20...  Opinion          1   \n","2947  http://worldnews.nbcnews.com/_news/2013/12/26/...     News          1   \n","\n","           primary.topic     secondary.topic  democrat.vote  republican.vote  \\\n","9956                 NaN                 NaN           -0.5             -0.5   \n","9922                 NaN                 NaN           -0.5             -0.5   \n","2167        Civil Rights  International News           -0.5             -0.5   \n","9452                 NaN                 NaN            0.0              0.0   \n","7032          Healthcare                 NaN           -0.5             -0.5   \n","...                  ...                 ...            ...              ...   \n","2625        Civil Rights   National Security           -0.5              0.0   \n","1511        Civil Rights          Gay Rights            0.0              0.5   \n","3281        Civil Rights                 NaN           -1.0              0.0   \n","6992          Healthcare                 NaN           -0.5              0.5   \n","2947  International News   National Security           -0.5              0.0   \n","\n","     negatively_affected leaning_toward           organization  \\\n","9956             Neutral        Neutral           dailykos.com   \n","9922             Neutral        Neutral           dailykos.com   \n","2167             Neutral        Neutral     washingtonpost.com   \n","9452             Neutral        Neutral                cnn.com   \n","7032             Neutral        Neutral      video.foxnews.com   \n","...                  ...            ...                    ...   \n","2625            Democrat     Republican     washingtonpost.com   \n","1511            Democrat     Republican          breitbart.com   \n","3281            Democrat     Republican                cnn.com   \n","6992            Democrat     Republican           usatoday.com   \n","2947            Democrat     Republican  worldnews.nbcnews.com   \n","\n","                                           text_content  \n","9956  if you are one of the more than 211000 member ...  \n","9922  the big moment happened during an an interview...  \n","2167  clockthis article wa published more than 10 ye...  \n","9452  abandoned church prison asylum are the star of...  \n","7032  log in to comment on video and join in on the ...  \n","...                                                 ...  \n","2625  clockthis article wa published more than 10 ye...  \n","1511  the pentagon officer who sent this email repor...  \n","3281  editor note ruben navarrette is a cnn contribu...  \n","6992  republican are launching a new wave of attack ...  \n","2947  profile section tv featured more from nbc foll...  \n","\n","[1224 rows x 11 columns]"],"text/html":["\n","  <div id=\"df-96d7dea7-12d0-467b-9515-8dd93e509771\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>url</th>\n","      <th>q3</th>\n","      <th>perceived</th>\n","      <th>primary.topic</th>\n","      <th>secondary.topic</th>\n","      <th>democrat.vote</th>\n","      <th>republican.vote</th>\n","      <th>negatively_affected</th>\n","      <th>leaning_toward</th>\n","      <th>organization</th>\n","      <th>text_content</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>9956</th>\n","      <td>http://www.dailykos.com/story/2013/01/24/11817...</td>\n","      <td>Opinion</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>-0.5</td>\n","      <td>-0.5</td>\n","      <td>Neutral</td>\n","      <td>Neutral</td>\n","      <td>dailykos.com</td>\n","      <td>if you are one of the more than 211000 member ...</td>\n","    </tr>\n","    <tr>\n","      <th>9922</th>\n","      <td>http://www.dailykos.com/story/2013/03/20/11956...</td>\n","      <td>Opinion</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>-0.5</td>\n","      <td>-0.5</td>\n","      <td>Neutral</td>\n","      <td>Neutral</td>\n","      <td>dailykos.com</td>\n","      <td>the big moment happened during an an interview...</td>\n","    </tr>\n","    <tr>\n","      <th>2167</th>\n","      <td>http://www.washingtonpost.com/opinions/david-i...</td>\n","      <td>News</td>\n","      <td>0</td>\n","      <td>Civil Rights</td>\n","      <td>International News</td>\n","      <td>-0.5</td>\n","      <td>-0.5</td>\n","      <td>Neutral</td>\n","      <td>Neutral</td>\n","      <td>washingtonpost.com</td>\n","      <td>clockthis article wa published more than 10 ye...</td>\n","    </tr>\n","    <tr>\n","      <th>9452</th>\n","      <td>http://www.cnn.com/2013/12/03/living/states-of...</td>\n","      <td>other</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>Neutral</td>\n","      <td>Neutral</td>\n","      <td>cnn.com</td>\n","      <td>abandoned church prison asylum are the star of...</td>\n","    </tr>\n","    <tr>\n","      <th>7032</th>\n","      <td>http://video.foxnews.com/v/2749366381001/congr...</td>\n","      <td>Opinion</td>\n","      <td>1</td>\n","      <td>Healthcare</td>\n","      <td>NaN</td>\n","      <td>-0.5</td>\n","      <td>-0.5</td>\n","      <td>Neutral</td>\n","      <td>Neutral</td>\n","      <td>video.foxnews.com</td>\n","      <td>log in to comment on video and join in on the ...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2625</th>\n","      <td>http://www.washingtonpost.com/world/national-s...</td>\n","      <td>Opinion</td>\n","      <td>0</td>\n","      <td>Civil Rights</td>\n","      <td>National Security</td>\n","      <td>-0.5</td>\n","      <td>0.0</td>\n","      <td>Democrat</td>\n","      <td>Republican</td>\n","      <td>washingtonpost.com</td>\n","      <td>clockthis article wa published more than 10 ye...</td>\n","    </tr>\n","    <tr>\n","      <th>1511</th>\n","      <td>http://www.breitbart.com/Big-Peace/2013/04/18/...</td>\n","      <td>News</td>\n","      <td>0</td>\n","      <td>Civil Rights</td>\n","      <td>Gay Rights</td>\n","      <td>0.0</td>\n","      <td>0.5</td>\n","      <td>Democrat</td>\n","      <td>Republican</td>\n","      <td>breitbart.com</td>\n","      <td>the pentagon officer who sent this email repor...</td>\n","    </tr>\n","    <tr>\n","      <th>3281</th>\n","      <td>http://www.cnn.com/2013/11/27/opinion/navarret...</td>\n","      <td>Opinion</td>\n","      <td>1</td>\n","      <td>Civil Rights</td>\n","      <td>NaN</td>\n","      <td>-1.0</td>\n","      <td>0.0</td>\n","      <td>Democrat</td>\n","      <td>Republican</td>\n","      <td>cnn.com</td>\n","      <td>editor note ruben navarrette is a cnn contribu...</td>\n","    </tr>\n","    <tr>\n","      <th>6992</th>\n","      <td>http://www.usatoday.com/story/news/politics/20...</td>\n","      <td>Opinion</td>\n","      <td>1</td>\n","      <td>Healthcare</td>\n","      <td>NaN</td>\n","      <td>-0.5</td>\n","      <td>0.5</td>\n","      <td>Democrat</td>\n","      <td>Republican</td>\n","      <td>usatoday.com</td>\n","      <td>republican are launching a new wave of attack ...</td>\n","    </tr>\n","    <tr>\n","      <th>2947</th>\n","      <td>http://worldnews.nbcnews.com/_news/2013/12/26/...</td>\n","      <td>News</td>\n","      <td>1</td>\n","      <td>International News</td>\n","      <td>National Security</td>\n","      <td>-0.5</td>\n","      <td>0.0</td>\n","      <td>Democrat</td>\n","      <td>Republican</td>\n","      <td>worldnews.nbcnews.com</td>\n","      <td>profile section tv featured more from nbc foll...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1224 rows × 11 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-96d7dea7-12d0-467b-9515-8dd93e509771')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-96d7dea7-12d0-467b-9515-8dd93e509771 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-96d7dea7-12d0-467b-9515-8dd93e509771');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b93a8303-e982-42fe-b545-2893c82823ed\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b93a8303-e982-42fe-b545-2893c82823ed')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b93a8303-e982-42fe-b545-2893c82823ed button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_852c88dd-78d6-4d61-b3c2-23bf237f7946\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('balanced_test_content')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_852c88dd-78d6-4d61-b3c2-23bf237f7946 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('balanced_test_content');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"balanced_test_content","summary":"{\n  \"name\": \"balanced_test_content\",\n  \"rows\": 1224,\n  \"fields\": [\n    {\n      \"column\": \"url\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1165,\n        \"samples\": [\n          \"http://www.breitbart.com/Big-Government/2013/03/07/Will-the-Left-Finally-Get-the-Tea-Party-Now\",\n          \"http://www.huffingtonpost.com/2013/08/27/white-house-syria-chemical-attack_n_3824222.html\",\n          \"http://www.dailykos.com/story/2013/10/23/1249954/-GOP-Rep-Freaks-Out-when-Confronted-with-Proof-of-ACA-Success\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"q3\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Opinion\",\n          \"News\",\n          \"other\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"perceived\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"primary.topic\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 14,\n        \"samples\": [\n          \"Republican Scandals\",\n          \"Democrat Scandals\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"secondary.topic\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 14,\n        \"samples\": [\n          \"Democrat Scandals\",\n          \"Education\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"democrat.vote\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4670707917932908,\n        \"min\": -1.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"republican.vote\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.41568069899209287,\n        \"min\": -1.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"negatively_affected\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Neutral\",\n          \"Republican\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"leaning_toward\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Neutral\",\n          \"Democrat\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"organization\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 36,\n        \"samples\": [\n          \"thechoice.blogs.nytimes.com\",\n          \"opinionator.blogs.nytimes.com\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"text_content\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1008,\n        \"samples\": [\n          \"rubio finished in fifth place with 5 percent of the vote while ryan finished in sixth place with 4 percent of the vote . the three biggest issue for the 762 straw poll voter were religious liberty life and obamacare . sen. ted cruz r-tx finished overwhelmingly in first place taking in 42 percent of the straw poll vote . dr. ben carson an ardent opponent of obamacare and former pennsylvania senator rick santorum a social conservative finished tied for second place with 13 percent of the vote each . rubio ha taken a beating among the gop rank-and-file voter for his stance on immigration reform and continues to be unable to return to the top tier of conservative leader . ryan who also support comprehensive immigration reform ha recently become the face of the gop establishment willingness to surrender to president barack obama on obamacare and the ongoing fiscal fight over both the budget and the debt ceiling . a high-ranking conservative capitol hill staffer told breitbart news that ryans fiscal stance seem to be out-of-step with the value of conservative . i dont think he did himself any good by his latest proposal mostly proved himself to be out of touch with the current trend the staffer said in an email . we are hoping the majority of the majority will enjoy being on the right side . when frc action president tony perkins wa asked by breitbart news what he thought of ryans performance in the straw poll perkins said he wasnt here personally . clearly i think it help if youre here and able to speak . now he did speak via video but i just think the competition is steep . we had really really great speech by some really great leader . it hard to compete with that by video message so thats what i would attribute it to . ryan had previously stated he would join the summit but ended up sending in a video speech in order to attend negotiation with the white house instead . perkins also said he think the ongoing fiscal negotiation that ryan is leading on behalf of house republican factor in quite significantly . a i wa just talking with ted cruz to call him to give him the result of the polling and i do that every year i will call the individual and give them a heads-up on who win the straw poll and so i called and talked to ted perkins said . he wa very encouraged by the response he received here and very surprised and excited to hear the result that he won the straw poll . it simply served to encourage him and bolster him in the stand that he is taking that he is representing and defending the family of this country that will be negatively impacted by obamacare and keeping his word to voter that he would come here to repeal obamacare . so i think it say that those base voter are not only not punching those who are doing what they said they were going to do but rewarding them for doing so perkins said . perkins added he doe not think immigration divide the social conservative voter a much a some would like it to . there certainly are difference in opinion of how we address it and how we approach it but i do not think that in my numerous conversation regarding this issue that it divide social conservative a much a some think perkins said . i think this straw poll is more a reflection of who ha been out front on one of the most pressing issue a i mentioned obamacare finished at the top three of our issue . religious liberty wa at the very top which obamacare is a direct assault on . who been leading the charge on that and that answer would be ted cruz he stated . cruz also helped lead the charge along with sen. jeff session r-al in the u.s. senate against the gang of eight immigration bill and remains opposed to any pathway to citizenship for illegal immigrant in america . perkins added that this straw poll show the gop establishment must begin representing populist idea of what the conservative base want . that the establishment is the same mindset that brought u the result in 2008 and 2012 perkins said . these issue that the vast majority of the republican voting base care about were ignored . the number and ive seen the analysis of the 2012 election specifically the post-election analysis and the republican said this is where theyre going and they wanted to reach the middle and they did but they stepped over the base he explained . what youre seeing here consistently is the president is mobilizing and exciting his base on many of these issue and in many of these election the republican have not . theyve not been able to do that . please let u know if you 're having issue with commenting . copyright 2024 breitbart\",\n          \"labor reporter huffpost washington -- worker toiling in low-wage job marked a dispiriting anniversary on wednesday it 's now been four year since the last time the federal minimum wage wa raised . the minimum wage is currently 7.25 per hour and it prevails in the 30 state that do n't already mandate a higher one . the last time it saw a boost wa on july 24 2009 when it wa raised from 6.55. that 70-cent raise marked the last in a series of increase signed into law by president george w. bush . since then the legal wage floor ha held steady even a the cost of living ha continued to rise . a full-time worker earning the minimum wage now pull in a salary of about 15000 per year far below a living wage in most part of the country . president barack obama and congressional democrat have proposed raising the minimum wage and pegging it to inflation though house republican are unlikely to go along with such a hike any time soon . bill to raise the minimum wage introduced in the house and senate earlier this year have not been voted on by their respective committee . republican leader including house speaker john boehner r-ohio have deemed a minimum-wage raise a job killer . house republican have already voted down a version of the minimum wage raise that wa inserted a an amendment to a workforce training bill . labor group supporting a minimum wage boost planned demonstration in an estimated 30 city across the country on wednesday calling the four-year lapse reason alone for a raise . according to organizer the protest would target low-wage employer who 've seen employee strike in recent month including walmart and mcdonald 's . a group of company that back the democratic proposal called business for a fair minimum wage launched a petition wednesday for business to pledge their support for a raise . over the decade the minimum wage ha gone for spell longer than four year before seeing a raise according to the labor department . the wage floor remained stagnant for a full 10 year leading up to the first increase late in bush 's tenure in 2007. and during the early 1990s the minimum wage stood at 4.25 for more than five year before being raised under president bill clinton . but if congress doe n't send obama legislation to sign by the end of his second term he will be the first president since ronald reagan who did n't raise the minimum wage at all . back on the campaign trail in 2008 obama stumped for hiking the minimum wage to 9.50 by 2011 and pegging it to inflation in perpetuity . that raise never came however and the president proposed a more modest boost to 9.00 during his state of the union address earlier this year . sen. tom harkin d-iowa and rep. george miller d-calif. soon rolled out their own more ambitious proposal which by 2015 would raise the minimum wage to 10.10 closer to it historical high in the late 1960s . the proposal by both the president and congressional democrat include one pivotal measure -- the tying of the minimum wage to an inflation index . ten state have already undertaken this change choosing to automatically reset the minimum wage each year rather than wrangle politically over a new raise every few year . if congress adopted an inflation index the purchasing power of the minimum wage would n't erode a it ha for the past four year . according to a recent huffpostyougov poll american broadly support the idea of raising the minimum wage and pegging it to inflation with 62 percent of american saying it should be boosted to 9. obama 's proposal wa supported by a huge majority of democrat in the poll 86 percent to 6 percent and a majority of independent 56 percent to 28 percent . fifty-two percent of republican however opposed the proposal compared to 36 percent who supported it . at huffpost we believe that everyone need high-quality journalism but we understand that not everyone can afford to pay for expensive news subscription . that is why we are committed to providing deeply reported carefully fact-checked news that is freely accessible to everyone . whether you come to huffpost for update on the 2024 presidential race hard-hitting investigation into critical issue facing our country today or trending story that make you laugh we appreciate you . the truth is news cost money to produce and we are proud that we have never put our story behind an expensive paywall . would you join u to help keep our story free for all your contribution of a little a 2 will go a long way . ca n't afford to donate support huffpost by creating a free account and log in while you read . a american head to the poll in 2024 the very future of our country is at stake . at huffpost we believe that a free press is critical to creating well-informed voter . that 's why our journalism is free for everyone even though other newsroom retreat behind expensive paywalls . our journalist will continue to cover the twist and turn during this historic presidential election . with your help we 'll bring you hard-hitting investigation well-researched analysis and timely take you ca n't find elsewhere . reporting in this current political climate is a responsibility we do not take lightly and we thank you for your support . contribute a little a 2 to keep our news free for all . ca n't afford to donate support huffpost by creating a free account and log in while you read . dear huffpost reader thank you for your past contribution to huffpost . we are sincerely grateful for reader like you who help u ensure that we can keep our journalism free for everyone . the stake are high this year and our 2024 coverage could use continued support . would you consider becoming a regular huffpost contributor dear huffpost reader thank you for your past contribution to huffpost . we are sincerely grateful for reader like you who help u ensure that we can keep our journalism free for everyone . the stake are high this year and our 2024 coverage could use continued support . if circumstance have changed since you last contributed we hope youll consider contributing to huffpost once more . already contributed log in to hide these message . by entering your email and clicking sign up you 're agreeing to let u send you customized marketing message about u and our advertising partner . you are also agreeing to our term of service and privacy policy .\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":9}]},{"cell_type":"markdown","source":["## Resampling Insights"],"metadata":{"id":"gcZxp0Y0YdXA"}},{"cell_type":"code","source":["category_counts = balanced_train_content['leaning_toward'].value_counts()\n","\n","\n","category_counts"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"s34B3YjlYfkQ","executionInfo":{"status":"ok","timestamp":1714363424918,"user_tz":240,"elapsed":206,"user":{"displayName":"Maya Krishnamoorthy","userId":"05037076869531260425"}},"outputId":"fd77f0ec-fe2f-43ed-ae6b-5745accf2db4"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["leaning_toward\n","Neutral       1721\n","Democrat      1721\n","Republican    1721\n","Name: count, dtype: int64"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["category_counts = balanced_test_content['leaning_toward'].value_counts()\n","\n","\n","category_counts"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"L7HkkxDkYjvw","executionInfo":{"status":"ok","timestamp":1714363425766,"user_tz":240,"elapsed":4,"user":{"displayName":"Maya Krishnamoorthy","userId":"05037076869531260425"}},"outputId":"c69d4ea1-d759-4397-8229-8f1c5e535ebe"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["leaning_toward\n","Neutral       408\n","Democrat      408\n","Republican    408\n","Name: count, dtype: int64"]},"metadata":{},"execution_count":12}]},{"cell_type":"markdown","source":["# Dummy Classifier on the Resampled Test Set"],"metadata":{"id":"6wTbJxhFYsl1"}},{"cell_type":"code","source":["import pandas as pd\n","from sklearn.dummy import DummyClassifier\n","from sklearn.metrics import accuracy_score, classification_report\n","\n","# Assuming 'leaning_toward' is your target variable\n","X_train = balanced_train_content.drop(columns=['leaning_toward'])  # Adjust if you have specific features in mind\n","y_train = balanced_train_content['leaning_toward']\n","\n","X_test = balanced_test_content.drop(columns=['leaning_toward'])  # Adjust if you have specific features in mind\n","y_test = balanced_test_content['leaning_toward']\n","\n","# Create a DummyClassifier\n","# You can choose the strategy: \"most_frequent\", \"stratified\", \"uniform\", or \"constant\"\n","dummy = DummyClassifier(strategy='stratified', random_state=42)\n","\n","# Train the classifier\n","dummy.fit(X_train, y_train)\n","\n","# Make predictions on the test set\n","y_pred = dummy.predict(X_test)\n","\n","# Evaluate the classifier\n","accuracy = accuracy_score(y_test, y_pred)\n","report = classification_report(y_test, y_pred)\n","\n","print(\"Accuracy:\", accuracy)\n","print(\"Classification Report:\\n\", report)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AFoqNNBHYqWp","executionInfo":{"status":"ok","timestamp":1714363427905,"user_tz":240,"elapsed":5,"user":{"displayName":"Maya Krishnamoorthy","userId":"05037076869531260425"}},"outputId":"6aa25e20-e6ae-4a31-e8ea-7297d4d283ce"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.3227124183006536\n","Classification Report:\n","               precision    recall  f1-score   support\n","\n","    Democrat       0.35      0.35      0.35       408\n","     Neutral       0.30      0.31      0.31       408\n","  Republican       0.32      0.31      0.32       408\n","\n","    accuracy                           0.32      1224\n","   macro avg       0.32      0.32      0.32      1224\n","weighted avg       0.32      0.32      0.32      1224\n","\n"]}]},{"cell_type":"markdown","source":["# Feature Extraction"],"metadata":{"id":"bd57oMlOYyma"}},{"cell_type":"markdown","source":["##TF-IDF Test and Train"],"metadata":{"id":"MnjmckuyY2fX"}},{"cell_type":"code","source":["from sklearn.feature_extraction.text import TfidfVectorizer\n","import pandas as pd\n","\n","import re\n","from sklearn.feature_extraction.text import TfidfVectorizer\n","\n","# Custom tokenizer function to preserve acronyms and names\n","def custom_tokenizer(text):\n","    tokens = re.findall(r'\\b[A-Za-z][a-z]+\\b|\\b[A-Z]+\\b', text)\n","    return tokens\n","\n","# Initialize TfidfVectorizer with custom tokenizer and stop words removed\n","tfidf_vectorizer = TfidfVectorizer(stop_words='english', tokenizer=custom_tokenizer)\n","\n","# Fill NaN values with empty strings\n","balanced_train_content['text_content'] = balanced_train_content['text_content'].fillna('')\n","balanced_test_content['text_content'] = balanced_test_content['text_content'].fillna('')\n","\n","# Fit and transform the training data\n","X_train_tfidf = tfidf_vectorizer.fit_transform(balanced_train_content['text_content'])\n","\n","# Transform the testing data\n","X_test_tfidf = tfidf_vectorizer.transform(balanced_test_content['text_content'])\n","\n","from sklearn.feature_extraction.text import TfidfVectorizer\n","\n","# Convert the TF-IDF matrix into a DataFrame\n","tfidf_train_df = pd.DataFrame(X_train_tfidf.toarray(), columns=tfidf_vectorizer.get_feature_names_out())\n","tfidf_test_df = pd.DataFrame(X_test_tfidf.toarray(), columns=tfidf_vectorizer.get_feature_names_out())\n","\n","# Print a sample of the TF-IDF DataFrame\n","print(\"\\nTF-IDF Sample:\")\n","tfidf_train_df\n"],"metadata":{"id":"tLkvUTwXY1-D","executionInfo":{"status":"ok","timestamp":1714363433186,"user_tz":240,"elapsed":4268,"user":{"displayName":"Maya Krishnamoorthy","userId":"05037076869531260425"}},"colab":{"base_uri":"https://localhost:8080/","height":493},"outputId":"92b0c142-414f-4153-9153-640ed6709d38"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/feature_extraction/text.py:528: UserWarning: The parameter 'token_pattern' will not be used since 'tokenizer' is not None'\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":["\n","TF-IDF Sample:\n"]},{"output_type":"execute_result","data":{"text/plain":["      aaa  aad  aadqaabka  aaf  aagay  aamer  aamerismad  aan  aaneed  aanta  \\\n","0     0.0  0.0        0.0  0.0    0.0    0.0         0.0  0.0     0.0    0.0   \n","1     0.0  0.0        0.0  0.0    0.0    0.0         0.0  0.0     0.0    0.0   \n","2     0.0  0.0        0.0  0.0    0.0    0.0         0.0  0.0     0.0    0.0   \n","3     0.0  0.0        0.0  0.0    0.0    0.0         0.0  0.0     0.0    0.0   \n","4     0.0  0.0        0.0  0.0    0.0    0.0         0.0  0.0     0.0    0.0   \n","...   ...  ...        ...  ...    ...    ...         ...  ...     ...    ...   \n","5158  0.0  0.0        0.0  0.0    0.0    0.0         0.0  0.0     0.0    0.0   \n","5159  0.0  0.0        0.0  0.0    0.0    0.0         0.0  0.0     0.0    0.0   \n","5160  0.0  0.0        0.0  0.0    0.0    0.0         0.0  0.0     0.0    0.0   \n","5161  0.0  0.0        0.0  0.0    0.0    0.0         0.0  0.0     0.0    0.0   \n","5162  0.0  0.0        0.0  0.0    0.0    0.0         0.0  0.0     0.0    0.0   \n","\n","      ...  zuckerbergs  zuhri  zulu  zuma  zumba  zwick  zwiers  zwillich  \\\n","0     ...          0.0    0.0   0.0   0.0    0.0    0.0     0.0       0.0   \n","1     ...          0.0    0.0   0.0   0.0    0.0    0.0     0.0       0.0   \n","2     ...          0.0    0.0   0.0   0.0    0.0    0.0     0.0       0.0   \n","3     ...          0.0    0.0   0.0   0.0    0.0    0.0     0.0       0.0   \n","4     ...          0.0    0.0   0.0   0.0    0.0    0.0     0.0       0.0   \n","...   ...          ...    ...   ...   ...    ...    ...     ...       ...   \n","5158  ...          0.0    0.0   0.0   0.0    0.0    0.0     0.0       0.0   \n","5159  ...          0.0    0.0   0.0   0.0    0.0    0.0     0.0       0.0   \n","5160  ...          0.0    0.0   0.0   0.0    0.0    0.0     0.0       0.0   \n","5161  ...          0.0    0.0   0.0   0.0    0.0    0.0     0.0       0.0   \n","5162  ...          0.0    0.0   0.0   0.0    0.0    0.0     0.0       0.0   \n","\n","      zwonitzer  zynga  \n","0           0.0    0.0  \n","1           0.0    0.0  \n","2           0.0    0.0  \n","3           0.0    0.0  \n","4           0.0    0.0  \n","...         ...    ...  \n","5158        0.0    0.0  \n","5159        0.0    0.0  \n","5160        0.0    0.0  \n","5161        0.0    0.0  \n","5162        0.0    0.0  \n","\n","[5163 rows x 38632 columns]"],"text/html":["\n","  <div id=\"df-ce7955a4-80f4-4392-ac23-e93408b3a4c4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>aaa</th>\n","      <th>aad</th>\n","      <th>aadqaabka</th>\n","      <th>aaf</th>\n","      <th>aagay</th>\n","      <th>aamer</th>\n","      <th>aamerismad</th>\n","      <th>aan</th>\n","      <th>aaneed</th>\n","      <th>aanta</th>\n","      <th>...</th>\n","      <th>zuckerbergs</th>\n","      <th>zuhri</th>\n","      <th>zulu</th>\n","      <th>zuma</th>\n","      <th>zumba</th>\n","      <th>zwick</th>\n","      <th>zwiers</th>\n","      <th>zwillich</th>\n","      <th>zwonitzer</th>\n","      <th>zynga</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>5158</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>5159</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>5160</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>5161</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>5162</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5163 rows × 38632 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ce7955a4-80f4-4392-ac23-e93408b3a4c4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ce7955a4-80f4-4392-ac23-e93408b3a4c4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ce7955a4-80f4-4392-ac23-e93408b3a4c4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b8658f9f-8331-4830-a009-d1d8bc7cf5a9\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b8658f9f-8331-4830-a009-d1d8bc7cf5a9')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b8658f9f-8331-4830-a009-d1d8bc7cf5a9 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_2f9bc5b8-30c0-41b6-9f4c-96ba6391e647\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('tfidf_train_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_2f9bc5b8-30c0-41b6-9f4c-96ba6391e647 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('tfidf_train_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"tfidf_train_df"}},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["tfidf_train_transposed = tfidf_train_df.T\n","\n","# Find the maximum value in each column\n","max_values = tfidf_train_transposed.max(axis=1)\n","\n","# Sort the values in descending order\n","sorted_values = max_values.sort_values(ascending=False)\n","\n","print(\"Top TF-IDF Values\")\n","# Display the top TF-IDF values\n","sorted_values.head(50)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xPiywpSlFTUT","executionInfo":{"status":"ok","timestamp":1714363433807,"user_tz":240,"elapsed":644,"user":{"displayName":"Maya Krishnamoorthy","userId":"05037076869531260425"}},"outputId":"e11e28b8-12d8-411d-9aae-bc1f3f97cfac"},"execution_count":15,"outputs":[{"output_type":"stream","name":"stdout","text":["Top TF-IDF Values\n"]},{"output_type":"execute_result","data":{"text/plain":["ref                0.971772\n","try                0.914745\n","walmart            0.881703\n","dog                0.869154\n","walshassociated    0.860233\n","potts              0.851420\n","judd               0.840283\n","fucking            0.839027\n","demaio             0.838452\n","vagina             0.832519\n","moped              0.825264\n","tattoo             0.822361\n","thanks             0.821438\n","thompson           0.819788\n","kilpatrick         0.812364\n","starbucks          0.810443\n","pm                 0.807915\n","koop               0.804373\n","navigator          0.801159\n","vallejo            0.801094\n","fusion             0.794971\n","alec               0.794587\n","mandela            0.789069\n","levinson           0.787675\n","redford            0.786077\n","strange            0.778923\n","horowitz           0.778854\n","gad                0.776895\n","sanford            0.775188\n","spooner            0.771874\n","putin              0.765767\n","christie           0.760327\n","bachmann           0.759928\n","marijuana          0.758899\n","russell            0.756744\n","pasok              0.754431\n","interpreter        0.753872\n","perez              0.752288\n","yelton             0.750141\n","jew                0.747791\n","hagel              0.747354\n","marriage           0.747025\n","gun                0.744500\n","jantjie            0.738038\n","unesco             0.737056\n","nbc                0.733558\n","smiley             0.733294\n","tsarnaev           0.731136\n","dupree             0.730472\n","guth               0.729034\n","dtype: float64"]},"metadata":{},"execution_count":15}]},{"cell_type":"markdown","source":["## BoW Test and Train"],"metadata":{"id":"oLe-3PhTY6tv"}},{"cell_type":"code","source":["from sklearn.feature_extraction.text import CountVectorizer\n","import pandas as pd\n","\n","# Fill NaN values with empty strings\n","balanced_train_content['text_content'] = balanced_train_content['text_content'].fillna('')\n","balanced_test_content['text_content'] = balanced_test_content['text_content'].fillna('')\n","\n","# Create the Bag of Words vectorizer\n","bow_vectorizer = CountVectorizer()\n","\n","# Fit and transform the training data\n","X_train_bow = bow_vectorizer.fit_transform(balanced_train_content['text_content'])\n","\n","# Transform the testing data\n","X_test_bow = bow_vectorizer.transform(balanced_test_content['text_content'])\n"],"metadata":{"id":"grOOBpQHY8RD"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##Word2Vec Test and Train"],"metadata":{"id":"FhaVymfCY91I"}},{"cell_type":"code","source":["from gensim.models import Word2Vec\n","import numpy as np\n","import pandas as pd\n","\n","# Fill NaN values with empty strings\n","balanced_train_content['text_content'] = balanced_train_content['text_content'].fillna('')\n","balanced_test_content['text_content'] = balanced_test_content['text_content'].fillna('')\n","\n","# Tokenize the text\n","train_tokens = [text.split() for text in balanced_train_content['text_content']]\n","test_tokens = [text.split() for text in balanced_test_content['text_content']]\n","\n","# Build the model on the training data\n","word2vec_model = Word2Vec(train_tokens, vector_size=100, window=5, min_count=1, workers=4)\n","\n","# Define a function to vectorize texts based on the model\n","def vectorize(text, model):\n","    vector = np.zeros(model.vector_size)\n","    n = 0\n","    for word in text:\n","        if word in model.wv:\n","            vector += model.wv[word]\n","            n += 1\n","    if n:\n","        vector /= n\n","    return vector\n","\n","# Vectorize the training and testing data\n","X_train_w2v = np.array([vectorize(text, word2vec_model) for text in train_tokens])\n","X_test_w2v = np.array([vectorize(text, word2vec_model) for text in test_tokens])\n"],"metadata":{"id":"XNrsHfGrY_YP"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Package Loading"],"metadata":{"id":"bvIoZbvsalXI"}},{"cell_type":"code","source":["from sklearn.pipeline import Pipeline\n","from sklearn.feature_extraction.text import TfidfVectorizer, CountVectorizer\n","from sklearn.model_selection import GridSearchCV\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.naive_bayes import MultinomialNB\n","from sklearn.svm import SVC\n"],"metadata":{"id":"EQN9cc5-akwj"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Logistic Regression"],"metadata":{"id":"2YkYmvCsZHC3"}},{"cell_type":"markdown","source":["## Logistic Regression with TF-IDF"],"metadata":{"id":"D6Cq9TcQZfeH"}},{"cell_type":"code","source":["from sklearn.linear_model import LogisticRegression\n","from sklearn.naive_bayes import MultinomialNB\n","from sklearn.svm import SVC\n","from sklearn.metrics import classification_report, accuracy_score\n","import pandas as pd\n","from sklearn.model_selection import train_test_split\n","\n","# Logistic Regression\n","log_reg = LogisticRegression(max_iter=1000)\n","log_reg.fit(tfidf_train_df, y_train)  # Assuming using TF-IDF features\n","print(\"Logistic Regression:\", classification_report(y_test, log_reg.predict(tfidf_test_df)))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OSSYjHOJZIwA","executionInfo":{"status":"ok","timestamp":1714363512052,"user_tz":240,"elapsed":78251,"user":{"displayName":"Maya Krishnamoorthy","userId":"05037076869531260425"}},"outputId":"87df2791-6f4f-4603-d5f0-eae98d91daba"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["Logistic Regression:               precision    recall  f1-score   support\n","\n","    Democrat       0.59      0.61      0.60       408\n","     Neutral       0.56      0.60      0.58       408\n","  Republican       0.63      0.56      0.59       408\n","\n","    accuracy                           0.59      1224\n","   macro avg       0.59      0.59      0.59      1224\n","weighted avg       0.59      0.59      0.59      1224\n","\n"]}]},{"cell_type":"code","source":["feature_names = tfidf_vectorizer.get_feature_names_out()\n","feature_names"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"k_Kpr-AGP1eP","executionInfo":{"status":"ok","timestamp":1714363512052,"user_tz":240,"elapsed":11,"user":{"displayName":"Maya Krishnamoorthy","userId":"05037076869531260425"}},"outputId":"f3e47b0c-1d73-4c23-cc7f-6d38845175dc"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['aaa', 'aad', 'aadqaabka', ..., 'zwillich', 'zwonitzer', 'zynga'],\n","      dtype=object)"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["# Get the unique class labels and their corresponding indices\n","class_labels = log_reg.classes_\n","\n","# Print the class labels with their corresponding indices\n","for index, label in enumerate(class_labels):\n","    print(f\"Index {index} corresponds to label '{label}'\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Cz_Yszn-QEqZ","executionInfo":{"status":"ok","timestamp":1714363512053,"user_tz":240,"elapsed":8,"user":{"displayName":"Maya Krishnamoorthy","userId":"05037076869531260425"}},"outputId":"d2f575bc-743c-437b-ec35-7f464ec0e253"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["Index 0 corresponds to label 'Democrat'\n","Index 1 corresponds to label 'Neutral'\n","Index 2 corresponds to label 'Republican'\n"]}]},{"cell_type":"code","source":["# Get the coefficients from the logistic regression model\n","coefficients = log_reg.coef_\n","\n","# Extract the coefficients for the class of interest (e.g., class_index = 0)\n","# Note: For binary classification, log_reg.coef_ will only have one class.\n","class_index = 0\n","coeff_class = coefficients[class_index]\n","\n","# Assume feature_names is a list or array of feature names that matches the columns used in training\n","feature_names = tfidf_vectorizer.get_feature_names_out()  # If using TfidfVectorizer or similar\n","\n","# Combine feature names and coefficients into a DataFrame\n","feature_coef_df = pd.DataFrame({'Feature': feature_names, 'Coefficient': coeff_class})\n","\n","# Sort the DataFrame based on coefficient values\n","top_features = feature_coef_df.sort_values(by='Coefficient', ascending=False).head(10)\n","worst_features = feature_coef_df.sort_values(by='Coefficient', ascending=False).tail(10)\n","print(top_features)\n","print(worst_features)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uNqEo3ceQLvb","executionInfo":{"status":"ok","timestamp":1714363658947,"user_tz":240,"elapsed":167,"user":{"displayName":"Maya Krishnamoorthy","userId":"05037076869531260425"}},"outputId":"1f9ea249-d3a2-462d-9252-7446eeaaff15"},"execution_count":20,"outputs":[{"output_type":"stream","name":"stdout","text":["          Feature  Coefficient\n","28744  republican     3.654166\n","14329         gop     1.213335\n","27698        rape     1.145819\n","5616       cheney     0.972829\n","4436       budget     0.886014\n","30446       scout     0.883546\n","13010        fold     0.854528\n","27898      reason     0.850448\n","333           act     0.847052\n","2468     bachmann     0.843408\n","              Feature  Coefficient\n","34426           thats    -0.856289\n","8249             data    -0.878726\n","19567            left    -0.936109\n","23780          obamas    -0.974101\n","4164        breitbart    -1.009116\n","21409          medium    -1.095027\n","5898             city    -1.131432\n","31970         snowden    -1.135698\n","467    administration    -1.156664\n","29920            said    -1.179948\n"]}]},{"cell_type":"markdown","source":["## Logistic Regression with BoW"],"metadata":{"id":"P0aBmPQFZhw2"}},{"cell_type":"code","source":["from sklearn.linear_model import LogisticRegression\n","from sklearn.naive_bayes import MultinomialNB\n","from sklearn.svm import SVC\n","from sklearn.metrics import classification_report\n","\n","# Logistic Regression\n","log_reg = LogisticRegression(max_iter=1000)\n","log_reg.fit(X_train_bow, y_train)  # Assuming using BoW features\n","print(\"Logistic Regression:\", classification_report(y_test, log_reg.predict(X_test_bow)))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":193},"id":"YB2v63wjZjkZ","executionInfo":{"status":"error","timestamp":1713897257945,"user_tz":240,"elapsed":576,"user":{"displayName":"Maya Krishnamoorthy","userId":"05037076869531260425"}},"outputId":"a9c7ff36-92ea-4f65-9dd5-19c749e4f115"},"execution_count":null,"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'X_train_bow' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-26-44cf1581acb9>\u001b[0m in \u001b[0;36m<cell line: 8>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;31m# Logistic Regression\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0mlog_reg\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mLogisticRegression\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmax_iter\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m1000\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 8\u001b[0;31m \u001b[0mlog_reg\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_train_bow\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_train\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# Assuming using BoW features\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      9\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Logistic Regression:\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mclassification_report\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my_test\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlog_reg\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpredict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_test_bow\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'X_train_bow' is not defined"]}]},{"cell_type":"markdown","source":["## Logistic Regression with BoW (Grid Search)"],"metadata":{"id":"d5WlogwHaokl"}},{"cell_type":"code","source":["pipeline_lr = Pipeline([\n","    ('bow', CountVectorizer()),\n","    ('clf', LogisticRegression())\n","])\n","\n","parameters_lr = {\n","    'bow__max_df': [0.5, 0.75, 1.0],\n","    'bow__ngram_range': [(1, 1), (1, 2)],\n","    'clf__C': [0.01, 0.1, 1, 10],\n","    'clf__penalty': ['l2'],\n","    'clf__solver': ['liblinear', 'lbfgs']\n","}\n","\n","grid_search_lr = GridSearchCV(pipeline_lr, parameters_lr, cv=5, scoring='accuracy', n_jobs=-1)\n","grid_search_lr.fit(balanced_train_content['text_content'], y_train)\n","\n","print(\"Best Params for Logistic Regression:\", grid_search_lr.best_params_)\n","print(\"Best Score for Logistic Regression:\", grid_search_lr.best_score_)\n"],"metadata":{"id":"uB15QdS7afT3","colab":{"base_uri":"https://localhost:8080/","height":356},"executionInfo":{"status":"error","timestamp":1713841554130,"user_tz":240,"elapsed":61185,"user":{"displayName":"Maya Krishnamoorthy","userId":"05037076869531260425"}},"outputId":"dd1b8011-2c85-4309-acac-43b2cb70ec56"},"execution_count":null,"outputs":[{"output_type":"error","ename":"KeyboardInterrupt","evalue":"","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-19-cd4b6ed95754>\u001b[0m in \u001b[0;36m<cell line: 15>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     13\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     14\u001b[0m \u001b[0mgrid_search_lr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mGridSearchCV\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpipeline_lr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mparameters_lr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcv\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m5\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mscoring\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'accuracy'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mn_jobs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m-\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 15\u001b[0;31m \u001b[0mgrid_search_lr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mbalanced_train_content\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'text_content'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_train\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     16\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     17\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Best Params for Logistic Regression:\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mgrid_search_lr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbest_params_\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_search.py\u001b[0m in \u001b[0;36mfit\u001b[0;34m(self, X, y, groups, **fit_params)\u001b[0m\n\u001b[1;32m    872\u001b[0m                 \u001b[0;32mreturn\u001b[0m \u001b[0mresults\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    873\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 874\u001b[0;31m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_run_search\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mevaluate_candidates\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    875\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    876\u001b[0m             \u001b[0;31m# multimetric is determined here because in the case of a callable\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_search.py\u001b[0m in \u001b[0;36m_run_search\u001b[0;34m(self, evaluate_candidates)\u001b[0m\n\u001b[1;32m   1386\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_run_search\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mevaluate_candidates\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1387\u001b[0m         \u001b[0;34m\"\"\"Search all candidates in param_grid\"\"\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1388\u001b[0;31m         \u001b[0mevaluate_candidates\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mParameterGrid\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mparam_grid\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1389\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1390\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_search.py\u001b[0m in \u001b[0;36mevaluate_candidates\u001b[0;34m(candidate_params, cv, more_results)\u001b[0m\n\u001b[1;32m    819\u001b[0m                     )\n\u001b[1;32m    820\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 821\u001b[0;31m                 out = parallel(\n\u001b[0m\u001b[1;32m    822\u001b[0m                     delayed(_fit_and_score)(\n\u001b[1;32m    823\u001b[0m                         \u001b[0mclone\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mbase_estimator\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/sklearn/utils/parallel.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, iterable)\u001b[0m\n\u001b[1;32m     61\u001b[0m             \u001b[0;32mfor\u001b[0m \u001b[0mdelayed_func\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkwargs\u001b[0m \u001b[0;32min\u001b[0m \u001b[0miterable\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     62\u001b[0m         )\n\u001b[0;32m---> 63\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0msuper\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__call__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0miterable_with_config\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     64\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     65\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/joblib/parallel.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, iterable)\u001b[0m\n\u001b[1;32m   2005\u001b[0m         \u001b[0mnext\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0moutput\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2006\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2007\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0moutput\u001b[0m \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreturn_generator\u001b[0m \u001b[0;32melse\u001b[0m \u001b[0mlist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0moutput\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2008\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2009\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m__repr__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/joblib/parallel.py\u001b[0m in \u001b[0;36m_get_outputs\u001b[0;34m(self, iterator, pre_dispatch)\u001b[0m\n\u001b[1;32m   1648\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1649\u001b[0m             \u001b[0;32mwith\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_backend\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mretrieval_context\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1650\u001b[0;31m                 \u001b[0;32myield\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_retrieve\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1651\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1652\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mGeneratorExit\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/joblib/parallel.py\u001b[0m in \u001b[0;36m_retrieve\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m   1760\u001b[0m                 (self._jobs[0].get_status(\n\u001b[1;32m   1761\u001b[0m                     timeout=self.timeout) == TASK_PENDING)):\n\u001b[0;32m-> 1762\u001b[0;31m                 \u001b[0mtime\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msleep\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m0.01\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1763\u001b[0m                 \u001b[0;32mcontinue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1764\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: "]}]},{"cell_type":"markdown","source":["# Naive Bayes"],"metadata":{"id":"9ORbs-nzZZRq"}},{"cell_type":"markdown","source":["## Naive Bayes with TF-IDF"],"metadata":{"id":"bgrY5NXNZqy6"}},{"cell_type":"code","source":["naive_bayes = MultinomialNB()\n","naive_bayes.fit(X_train_tfidf, y_train)\n","print(\"Naive Bayes:\", classification_report(y_test, naive_bayes.predict(X_test_tfidf)))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4l04dA_gZwoo","executionInfo":{"status":"ok","timestamp":1713897068345,"user_tz":240,"elapsed":222,"user":{"displayName":"Maya Krishnamoorthy","userId":"05037076869531260425"}},"outputId":"11bd599d-774e-4ce3-f25d-62a0393845e3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Naive Bayes:               precision    recall  f1-score   support\n","\n","    Democrat       0.50      0.70      0.59       408\n","     Neutral       0.59      0.49      0.53       408\n","  Republican       0.62      0.48      0.54       408\n","\n","    accuracy                           0.56      1224\n","   macro avg       0.57      0.56      0.55      1224\n","weighted avg       0.57      0.56      0.55      1224\n","\n"]}]},{"cell_type":"markdown","source":["## Naive Bayes with BoW"],"metadata":{"id":"Rhmka7j5Zsc5"}},{"cell_type":"code","source":["naive_bayes = MultinomialNB()\n","naive_bayes.fit(X_train_bow, y_train)\n","print(\"Naive Bayes:\", classification_report(y_test, naive_bayes.predict(X_test_bow)))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":176},"id":"WJWwmj9QZyOm","executionInfo":{"status":"error","timestamp":1713897068582,"user_tz":240,"elapsed":9,"user":{"displayName":"Maya Krishnamoorthy","userId":"05037076869531260425"}},"outputId":"da4dbd8b-4030-48e6-adec-6211e7900166"},"execution_count":null,"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'X_train_bow' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-23-6e9ec92ca56c>\u001b[0m in \u001b[0;36m<cell line: 2>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mnaive_bayes\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mMultinomialNB\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mnaive_bayes\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_train_bow\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_train\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Naive Bayes:\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mclassification_report\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my_test\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnaive_bayes\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpredict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_test_bow\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'X_train_bow' is not defined"]}]},{"cell_type":"markdown","source":["## Naive Bayes with Tf-IDF (Grid Search)"],"metadata":{"id":"kSVE2PMZa6VP"}},{"cell_type":"code","source":["pipeline_nb = Pipeline([\n","    ('tfidf', TfidfVectorizer()),\n","    ('clf', MultinomialNB())\n","])\n","\n","parameters_nb = {\n","    'tfidf__max_df': [0.5, 0.75, 1.0],\n","    'tfidf__ngram_range': [(1, 1), (1, 2)],\n","    'clf__alpha': [0.01, 0.1, 1, 10]\n","}\n","\n","grid_search_nb = GridSearchCV(pipeline_nb, parameters_nb, cv=5, scoring='accuracy', n_jobs=-1)\n","grid_search_nb.fit(balanced_train_content['text_content'], y_train)\n","\n","print(\"Best Params for Naive Bayes:\", grid_search_nb.best_params_)\n","print(\"Best Score for Naive Bayes:\", grid_search_nb.best_score_)\n"],"metadata":{"id":"EPIJQ-Z_a6Gs"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# SVM"],"metadata":{"id":"MXDLaL9PZacm"}},{"cell_type":"markdown","source":["## SVM with TD-IDF"],"metadata":{"id":"Kf8lAvRRZ4hX"}},{"cell_type":"code","source":["# Check shapes of target label arrays\n","print(\"Training Labels Shape:\", y_train.shape)\n","print(\"Test Labels Shape:\", y_test.shape)\n","\n","# Assuming y_train and y_test are pandas Series or NumPy arrays\n","\n","# Check if the shapes are inconsistent and adjust if needed\n","if len(y_train) != len(tfidf_train_df):\n","    y_train = y_train.iloc[:len(tfidf_train_df)]  # Adjust training labels to match training features\n","\n","if len(y_test) != len(tfidf_test_df):\n","    y_test = y_test.iloc[:len(tfidf_test_df)]  # Adjust test labels to match test features\n","\n","# Verify the adjusted shapes of target label arrays\n","print(\"Adjusted Training Labels Shape:\", y_train.shape)\n","print(\"Adjusted Test Labels Shape:\", y_test.shape)\n","\n","# Now you can proceed with training your SVM model using tfidf_train_df, y_train, tfidf_test_df, and y_test\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rQnVq0lKZ395","executionInfo":{"status":"ok","timestamp":1713926856776,"user_tz":240,"elapsed":438,"user":{"displayName":"Maya Krishnamoorthy","userId":"05037076869531260425"}},"outputId":"fbb949a7-8b36-4798-98d5-2818d4704e19"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Training Labels Shape: (5163,)\n","Test Labels Shape: (1224,)\n","Adjusted Training Labels Shape: (5163,)\n","Adjusted Test Labels Shape: (1224,)\n"]}]},{"cell_type":"code","source":["from sklearn.svm import SVC\n","from sklearn.metrics import classification_report\n","\n","# Create an instance of SVC\n","svm = SVC()\n","\n","# Fit the SVM model to the adjusted training data\n","svm.fit(tfidf_train_df, y_train)\n","\n","# Evaluate the SVM model on the adjusted test data\n","y_pred = svm.predict(tfidf_test_df)\n","\n","# Print the classification report to evaluate model performance\n","print(\"SVM Classification Report:\")\n","print(classification_report(y_test, y_pred))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xt7xUgQynQAZ","executionInfo":{"status":"ok","timestamp":1713927915490,"user_tz":240,"elapsed":196736,"user":{"displayName":"Maya Krishnamoorthy","userId":"05037076869531260425"}},"outputId":"78051dc1-b0b9-4473-f9c8-016b09a0505d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["SVM Classification Report:\n","              precision    recall  f1-score   support\n","\n","    Democrat       0.59      0.61      0.60       408\n","     Neutral       0.55      0.60      0.57       408\n","  Republican       0.64      0.56      0.60       408\n","\n","    accuracy                           0.59      1224\n","   macro avg       0.59      0.59      0.59      1224\n","weighted avg       0.59      0.59      0.59      1224\n","\n"]}]},{"cell_type":"code","source":["print(\"Training Data Shape:\", tfidf_train_df.shape, y_train.shape)\n","print(\"Test Data Shape:\", tfidf_test_df.shape, y_test.shape)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ddcfF0Rvmfqz","executionInfo":{"status":"ok","timestamp":1713927915502,"user_tz":240,"elapsed":0,"user":{"displayName":"Maya Krishnamoorthy","userId":"05037076869531260425"}},"outputId":"33408c19-533e-4e6b-81f1-4f4368c318d8"},"execution_count":null,"outputs":[{"metadata":{"tags":null},"name":"stdout","output_type":"stream","text":["Training Data Shape: (5163, 38632) (5163,)\n","Test Data Shape: (1224, 38632) (1224,)\n"]}]},{"cell_type":"code","source":["from sklearn.inspection import permutation_importance\n","from sklearn.feature_extraction.text import TfidfVectorizer\n","\n","# Assuming you have already trained and tested your SVM model 'svm'\n","# Assuming 'X_test_tfidf' is your TF-IDF matrix for the test data (sparse matrix)\n","# Assuming 'y_test' are the corresponding labels for the test data\n","\n","# Convert sparse TF-IDF matrix to a dense NumPy array\n","X_test_tfidf_dense = X_test_tfidf.toarray()\n","\n","# Calculate permutation importance\n","importance = permutation_importance(svm, X_test_tfidf_dense, y_test, n_repeats=10, random_state=42, n_jobs=-1)\n","\n","# Get feature names from your TF-IDF vectorizer\n","feature_names = tfidf_vectorizer.get_feature_names_out()\n","\n","# Map feature importance scores to feature names\n","feature_importance = zip(feature_names, importance.importances_mean)\n","\n","# Sort the features by importance\n","sorted_features = sorted(feature_importance, key=lambda x: x[1], reverse=True)\n","\n","# Print the top 30 features\n","print(\"Top 30 token importances:\")\n","for feature, importance in sorted_features[:30]:\n","    print(f\"{feature}: {importance}\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":391},"id":"KTrpO654YAze","outputId":"60c62dd7-7fed-4b74-8f99-b6b9382bc34e","executionInfo":{"status":"error","timestamp":1713929219668,"user_tz":240,"elapsed":1298093,"user":{"displayName":"Maya Krishnamoorthy","userId":"05037076869531260425"}}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/base.py:439: UserWarning: X does not have valid feature names, but SVC was fitted with feature names\n","  warnings.warn(\n"]},{"output_type":"error","ename":"KeyboardInterrupt","evalue":"","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-13-a67ac4f4c594>\u001b[0m in \u001b[0;36m<cell line: 12>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     10\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     11\u001b[0m \u001b[0;31m# Calculate permutation importance\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 12\u001b[0;31m \u001b[0mimportance\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpermutation_importance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msvm\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mX_test_tfidf_dense\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_test\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mn_repeats\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m10\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mrandom_state\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m42\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mn_jobs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m-\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     13\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     14\u001b[0m \u001b[0;31m# Get feature names from your TF-IDF vectorizer\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/sklearn/inspection/_permutation_importance.py\u001b[0m in \u001b[0;36mpermutation_importance\u001b[0;34m(estimator, X, y, scoring, n_repeats, n_jobs, random_state, sample_weight, max_samples)\u001b[0m\n\u001b[1;32m    256\u001b[0m     \u001b[0mbaseline_score\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_weights_scorer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mscorer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mestimator\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msample_weight\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    257\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 258\u001b[0;31m     scores = Parallel(n_jobs=n_jobs)(\n\u001b[0m\u001b[1;32m    259\u001b[0m         delayed(_calculate_permutation_scores)(\n\u001b[1;32m    260\u001b[0m             \u001b[0mestimator\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/sklearn/utils/parallel.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, iterable)\u001b[0m\n\u001b[1;32m     61\u001b[0m             \u001b[0;32mfor\u001b[0m \u001b[0mdelayed_func\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkwargs\u001b[0m \u001b[0;32min\u001b[0m \u001b[0miterable\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     62\u001b[0m         )\n\u001b[0;32m---> 63\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0msuper\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__call__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0miterable_with_config\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     64\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     65\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/joblib/parallel.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, iterable)\u001b[0m\n\u001b[1;32m   2005\u001b[0m         \u001b[0mnext\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0moutput\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2006\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2007\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0moutput\u001b[0m \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreturn_generator\u001b[0m \u001b[0;32melse\u001b[0m \u001b[0mlist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0moutput\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2008\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2009\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m__repr__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/joblib/parallel.py\u001b[0m in \u001b[0;36m_get_outputs\u001b[0;34m(self, iterator, pre_dispatch)\u001b[0m\n\u001b[1;32m   1648\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1649\u001b[0m             \u001b[0;32mwith\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_backend\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mretrieval_context\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1650\u001b[0;31m                 \u001b[0;32myield\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_retrieve\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1651\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1652\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mGeneratorExit\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/joblib/parallel.py\u001b[0m in \u001b[0;36m_retrieve\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m   1760\u001b[0m                 (self._jobs[0].get_status(\n\u001b[1;32m   1761\u001b[0m                     timeout=self.timeout) == TASK_PENDING)):\n\u001b[0;32m-> 1762\u001b[0;31m                 \u001b[0mtime\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msleep\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m0.01\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1763\u001b[0m                 \u001b[0;32mcontinue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1764\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: "]}]},{"cell_type":"markdown","source":["## SVM with BoW"],"metadata":{"id":"27hT6788Z7iG"}},{"cell_type":"code","source":["# SVM\n","svm = SVC()\n","svm.fit(X_train_bow, y_train)\n","print(\"SVM:\", classification_report(y_test, svm.predict(X_test_bow)))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rFHEX5hmZ63F","executionInfo":{"status":"ok","timestamp":1713816523443,"user_tz":240,"elapsed":124859,"user":{"displayName":"Jahnavi Alapati","userId":"01672419131314460244"}},"outputId":"20c0e9f8-88d2-4457-fce3-77373b7c05fb"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["SVM:               precision    recall  f1-score   support\n","\n","    Democrat       0.49      0.71      0.58       408\n","     Neutral       0.63      0.41      0.49       408\n","  Republican       0.63      0.57      0.60       408\n","\n","    accuracy                           0.56      1224\n","   macro avg       0.58      0.56      0.56      1224\n","weighted avg       0.58      0.56      0.56      1224\n","\n"]}]},{"cell_type":"markdown","source":["## SVM with TF-IDF (Grid Search)"],"metadata":{"id":"3OjiJiEVbDA-"}},{"cell_type":"code","source":["pipeline_svm = Pipeline([\n","    ('tfidf', TfidfVectorizer()),\n","    ('clf', SVC())\n","])\n","\n","parameters_svm = {\n","    'tfidf__max_df': [0.5, 0.75, 1.0],\n","    'tfidf__ngram_range': [(1, 1), (1, 2)],\n","    'clf__C': [0.1, 1, 10],\n","    'clf__kernel': ['linear', 'rbf'],\n","    'clf__gamma': ['scale', 'auto']\n","}\n","\n","grid_search_svm = GridSearchCV(pipeline_svm, parameters_svm, cv=5, scoring='accuracy', n_jobs=-1)\n","grid_search_svm.fit(balanced_train_content['text_content'], y_train)\n","\n","print(\"Best Params for SVM:\", grid_search_svm.best_params_)\n","print(\"Best Score for SVM:\", grid_search_svm.best_score_)\n"],"metadata":{"id":"xI8am9LpbCn1"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# RNN"],"metadata":{"id":"6a8vyTD_c3LY"}},{"cell_type":"code","source":["import tensorflow as tf\n","\n","# Build the model\n","model = tf.keras.Sequential([\n","    tf.keras.layers.Embedding(input_dim=len(bow_vectorizer.vocabulary_), output_dim=128, input_length=X_train_bow.shape[1]),\n","    tf.keras.layers.SimpleRNN(128),\n","    tf.keras.layers.Dense(1, activation='sigmoid')\n","])\n","\n","# Compile the model\n","model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])\n","\n","# Fit the model\n","model.fit(X_train_bow.toarray(), y_train, epochs=5, validation_data=(X_test_bow.toarray(), y_test))\n"],"metadata":{"id":"9Apqbpi9c4Vq","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"error","timestamp":1713841590657,"user_tz":240,"elapsed":22668,"user":{"displayName":"Maya Krishnamoorthy","userId":"05037076869531260425"}},"outputId":"fe83af99-9a58-4161-c27b-a6d6933eb171"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/5\n"]},{"output_type":"error","ename":"UnimplementedError","evalue":"Graph execution error:\n\nDetected at node binary_crossentropy/Cast defined at (most recent call last):\n  File \"/usr/lib/python3.10/runpy.py\", line 196, in _run_module_as_main\n\n  File \"/usr/lib/python3.10/runpy.py\", line 86, in _run_code\n\n  File \"/usr/local/lib/python3.10/dist-packages/colab_kernel_launcher.py\", line 37, in <module>\n\n  File \"/usr/local/lib/python3.10/dist-packages/traitlets/config/application.py\", line 992, in launch_instance\n\n  File \"/usr/local/lib/python3.10/dist-packages/ipykernel/kernelapp.py\", line 619, in start\n\n  File \"/usr/local/lib/python3.10/dist-packages/tornado/platform/asyncio.py\", line 195, in start\n\n  File \"/usr/lib/python3.10/asyncio/base_events.py\", line 603, in run_forever\n\n  File \"/usr/lib/python3.10/asyncio/base_events.py\", line 1909, in _run_once\n\n  File \"/usr/lib/python3.10/asyncio/events.py\", line 80, in _run\n\n  File \"/usr/local/lib/python3.10/dist-packages/tornado/ioloop.py\", line 685, in <lambda>\n\n  File \"/usr/local/lib/python3.10/dist-packages/tornado/ioloop.py\", line 738, in _run_callback\n\n  File \"/usr/local/lib/python3.10/dist-packages/tornado/gen.py\", line 825, in inner\n\n  File \"/usr/local/lib/python3.10/dist-packages/tornado/gen.py\", line 786, in run\n\n  File \"/usr/local/lib/python3.10/dist-packages/ipykernel/kernelbase.py\", line 361, in process_one\n\n  File \"/usr/local/lib/python3.10/dist-packages/tornado/gen.py\", line 234, in wrapper\n\n  File \"/usr/local/lib/python3.10/dist-packages/ipykernel/kernelbase.py\", line 261, in dispatch_shell\n\n  File \"/usr/local/lib/python3.10/dist-packages/tornado/gen.py\", line 234, in wrapper\n\n  File \"/usr/local/lib/python3.10/dist-packages/ipykernel/kernelbase.py\", line 539, in execute_request\n\n  File \"/usr/local/lib/python3.10/dist-packages/tornado/gen.py\", line 234, in wrapper\n\n  File \"/usr/local/lib/python3.10/dist-packages/ipykernel/ipkernel.py\", line 302, in do_execute\n\n  File \"/usr/local/lib/python3.10/dist-packages/ipykernel/zmqshell.py\", line 539, in run_cell\n\n  File \"/usr/local/lib/python3.10/dist-packages/IPython/core/interactiveshell.py\", line 2975, in run_cell\n\n  File \"/usr/local/lib/python3.10/dist-packages/IPython/core/interactiveshell.py\", line 3030, in _run_cell\n\n  File \"/usr/local/lib/python3.10/dist-packages/IPython/core/async_helpers.py\", line 78, in _pseudo_sync_runner\n\n  File \"/usr/local/lib/python3.10/dist-packages/IPython/core/interactiveshell.py\", line 3257, in run_cell_async\n\n  File \"/usr/local/lib/python3.10/dist-packages/IPython/core/interactiveshell.py\", line 3473, in run_ast_nodes\n\n  File \"/usr/local/lib/python3.10/dist-packages/IPython/core/interactiveshell.py\", line 3553, in run_code\n\n  File \"<ipython-input-20-757ed28491b0>\", line 14, in <cell line: 14>\n\n  File \"/usr/local/lib/python3.10/dist-packages/keras/src/utils/traceback_utils.py\", line 65, in error_handler\n\n  File \"/usr/local/lib/python3.10/dist-packages/keras/src/engine/training.py\", line 1807, in fit\n\n  File \"/usr/local/lib/python3.10/dist-packages/keras/src/engine/training.py\", line 1401, in train_function\n\n  File \"/usr/local/lib/python3.10/dist-packages/keras/src/engine/training.py\", line 1384, in step_function\n\n  File \"/usr/local/lib/python3.10/dist-packages/keras/src/engine/training.py\", line 1373, in run_step\n\n  File \"/usr/local/lib/python3.10/dist-packages/keras/src/engine/training.py\", line 1151, in train_step\n\n  File \"/usr/local/lib/python3.10/dist-packages/keras/src/engine/training.py\", line 1209, in compute_loss\n\n  File \"/usr/local/lib/python3.10/dist-packages/keras/src/engine/compile_utils.py\", line 277, in __call__\n\n  File \"/usr/local/lib/python3.10/dist-packages/keras/src/losses.py\", line 143, in __call__\n\n  File \"/usr/local/lib/python3.10/dist-packages/keras/src/losses.py\", line 270, in call\n\n  File \"/usr/local/lib/python3.10/dist-packages/keras/src/losses.py\", line 2521, in binary_crossentropy\n\n2 root error(s) found.\n  (0) UNIMPLEMENTED:  Cast string to float is not supported\n\t [[{{node binary_crossentropy/Cast}}]]\n  (1) CANCELLED:  Function was cancelled before it was started\n0 successful operations.\n0 derived errors ignored. [Op:__inference_train_function_1786]","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mUnimplementedError\u001b[0m                        Traceback (most recent call last)","\u001b[0;32m<ipython-input-20-757ed28491b0>\u001b[0m in \u001b[0;36m<cell line: 14>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     12\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     13\u001b[0m \u001b[0;31m# Fit the model\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 14\u001b[0;31m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_train_bow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtoarray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mepochs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m5\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvalidation_data\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_test_bow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtoarray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_test\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/keras/src/utils/traceback_utils.py\u001b[0m in \u001b[0;36merror_handler\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m     68\u001b[0m             \u001b[0;31m# To get the full stack trace, call:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     69\u001b[0m             \u001b[0;31m# `tf.debugging.disable_traceback_filtering()`\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 70\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwith_traceback\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfiltered_tb\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     71\u001b[0m         \u001b[0;32mfinally\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     72\u001b[0m             \u001b[0;32mdel\u001b[0m \u001b[0mfiltered_tb\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/tensorflow/python/eager/execute.py\u001b[0m in \u001b[0;36mquick_execute\u001b[0;34m(op_name, num_outputs, inputs, attrs, ctx, name)\u001b[0m\n\u001b[1;32m     51\u001b[0m   \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     52\u001b[0m     \u001b[0mctx\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mensure_initialized\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 53\u001b[0;31m     tensors = pywrap_tfe.TFE_Py_Execute(ctx._handle, device_name, op_name,\n\u001b[0m\u001b[1;32m     54\u001b[0m                                         inputs, attrs, num_outputs)\n\u001b[1;32m     55\u001b[0m   \u001b[0;32mexcept\u001b[0m \u001b[0mcore\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_NotOkStatusException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mUnimplementedError\u001b[0m: Graph execution error:\n\nDetected at node binary_crossentropy/Cast defined at (most recent call last):\n  File \"/usr/lib/python3.10/runpy.py\", line 196, in _run_module_as_main\n\n  File \"/usr/lib/python3.10/runpy.py\", line 86, in _run_code\n\n  File \"/usr/local/lib/python3.10/dist-packages/colab_kernel_launcher.py\", line 37, in <module>\n\n  File \"/usr/local/lib/python3.10/dist-packages/traitlets/config/application.py\", line 992, in launch_instance\n\n  File \"/usr/local/lib/python3.10/dist-packages/ipykernel/kernelapp.py\", line 619, in start\n\n  File \"/usr/local/lib/python3.10/dist-packages/tornado/platform/asyncio.py\", line 195, in start\n\n  File \"/usr/lib/python3.10/asyncio/base_events.py\", line 603, in run_forever\n\n  File \"/usr/lib/python3.10/asyncio/base_events.py\", line 1909, in _run_once\n\n  File \"/usr/lib/python3.10/asyncio/events.py\", line 80, in _run\n\n  File \"/usr/local/lib/python3.10/dist-packages/tornado/ioloop.py\", line 685, in <lambda>\n\n  File \"/usr/local/lib/python3.10/dist-packages/tornado/ioloop.py\", line 738, in _run_callback\n\n  File \"/usr/local/lib/python3.10/dist-packages/tornado/gen.py\", line 825, in inner\n\n  File \"/usr/local/lib/python3.10/dist-packages/tornado/gen.py\", line 786, in run\n\n  File \"/usr/local/lib/python3.10/dist-packages/ipykernel/kernelbase.py\", line 361, in process_one\n\n  File \"/usr/local/lib/python3.10/dist-packages/tornado/gen.py\", line 234, in wrapper\n\n  File \"/usr/local/lib/python3.10/dist-packages/ipykernel/kernelbase.py\", line 261, in dispatch_shell\n\n  File \"/usr/local/lib/python3.10/dist-packages/tornado/gen.py\", line 234, in wrapper\n\n  File \"/usr/local/lib/python3.10/dist-packages/ipykernel/kernelbase.py\", line 539, in execute_request\n\n  File \"/usr/local/lib/python3.10/dist-packages/tornado/gen.py\", line 234, in wrapper\n\n  File \"/usr/local/lib/python3.10/dist-packages/ipykernel/ipkernel.py\", line 302, in do_execute\n\n  File \"/usr/local/lib/python3.10/dist-packages/ipykernel/zmqshell.py\", line 539, in run_cell\n\n  File \"/usr/local/lib/python3.10/dist-packages/IPython/core/interactiveshell.py\", line 2975, in run_cell\n\n  File \"/usr/local/lib/python3.10/dist-packages/IPython/core/interactiveshell.py\", line 3030, in _run_cell\n\n  File \"/usr/local/lib/python3.10/dist-packages/IPython/core/async_helpers.py\", line 78, in _pseudo_sync_runner\n\n  File \"/usr/local/lib/python3.10/dist-packages/IPython/core/interactiveshell.py\", line 3257, in run_cell_async\n\n  File \"/usr/local/lib/python3.10/dist-packages/IPython/core/interactiveshell.py\", line 3473, in run_ast_nodes\n\n  File \"/usr/local/lib/python3.10/dist-packages/IPython/core/interactiveshell.py\", line 3553, in run_code\n\n  File \"<ipython-input-20-757ed28491b0>\", line 14, in <cell line: 14>\n\n  File \"/usr/local/lib/python3.10/dist-packages/keras/src/utils/traceback_utils.py\", line 65, in error_handler\n\n  File \"/usr/local/lib/python3.10/dist-packages/keras/src/engine/training.py\", line 1807, in fit\n\n  File \"/usr/local/lib/python3.10/dist-packages/keras/src/engine/training.py\", line 1401, in train_function\n\n  File \"/usr/local/lib/python3.10/dist-packages/keras/src/engine/training.py\", line 1384, in step_function\n\n  File \"/usr/local/lib/python3.10/dist-packages/keras/src/engine/training.py\", line 1373, in run_step\n\n  File \"/usr/local/lib/python3.10/dist-packages/keras/src/engine/training.py\", line 1151, in train_step\n\n  File \"/usr/local/lib/python3.10/dist-packages/keras/src/engine/training.py\", line 1209, in compute_loss\n\n  File \"/usr/local/lib/python3.10/dist-packages/keras/src/engine/compile_utils.py\", line 277, in __call__\n\n  File \"/usr/local/lib/python3.10/dist-packages/keras/src/losses.py\", line 143, in __call__\n\n  File \"/usr/local/lib/python3.10/dist-packages/keras/src/losses.py\", line 270, in call\n\n  File \"/usr/local/lib/python3.10/dist-packages/keras/src/losses.py\", line 2521, in binary_crossentropy\n\n2 root error(s) found.\n  (0) UNIMPLEMENTED:  Cast string to float is not supported\n\t [[{{node binary_crossentropy/Cast}}]]\n  (1) CANCELLED:  Function was cancelled before it was started\n0 successful operations.\n0 derived errors ignored. [Op:__inference_train_function_1786]"]}]},{"cell_type":"markdown","source":["# BERT"],"metadata":{"id":"o1Nm9hZ9c6BG"}},{"cell_type":"code","source":["from transformers import BertTokenizer, TFBertForSequenceClassification, BertConfig\n","from transformers import InputExample, InputFeatures\n","\n","tokenizer = BertTokenizer.from_pretrained('bert-base-uncased')\n","model = TFBertForSequenceClassification.from_pretrained('bert-base-uncased')\n","\n","# Tokenize the data suitable for BERT\n","def convert_example_to_feature(review):\n","    return tokenizer.encode_plus(review, add_special_tokens=True, max_length=512, padding='max_length', return_attention_mask=True, return_tensors='tf')\n","\n","# Preparing dataset for BERT\n","train_encodings = [convert_example_to_feature(text) for text in balanced_train_content['text_content']]\n","test_encodings = [convert_example_to_feature(text) for text in balanced_test_content['text_content']]\n","\n","# Fit the model on training data and evaluate on testing data\n","model.compile(optimizer=tf.optimizers.Adam(learning_rate=2e-5), loss=model.compute_loss, metrics=['accuracy'])\n","model.fit(train_encodings, y_train, epochs=3, validation_data=(test_encodings, y_test))\n"],"metadata":{"id":"su2ron5tc8gm","colab":{"base_uri":"https://localhost:8080/","height":901,"referenced_widgets":["21a27f648df64e839e523ba17f660ce6","d2a5d67ee3264453bb7476303afbe82a","3a026828aa6e4390a9c99d165582b2c2","dcf54374adb84c9d9fd20134b3a699e2","fd350251b0b84aa68fc1732ca8158c1e","3e39e62007ac4ddbaa6660429aac0fbd","a9286c2fad914c49bb99a751485f27b7","9da6e3abc9e44792a3dd49fee8cdb598","b7c02a85f0da42e5a85bf7041df76a25","334c2f97692e4cc191d51b573e1168e0","0c4e2e3606d64a4e8a2b4781018804d6","53d1248e1afa463ba00ec0e874c60812","a3ba1d08e97442dc82104ea89ccb605e","6867aca26bd44e7899505c7c5cb5e54c","c2512a2cebb041e5bea94730902e86d8","a4e7d747e6db4cceb8b5310dce218c74","12eacc79878c4769a72b53ffd2beee12","fc94fa7ee0bf431fb029e560de1538ff","85adccffdb394d4fb4c379d71fa46d43","a07d7b733c6644288f67a15ecb76a563","3bcb3151e8e34afd85abf9c4451431ee","1aa53344dd9a4b55905110839e933036","ecad9d1dc3d54fd1bdc7a460d5527dce","571711764c2f465584dfdd7fedf59a85","f3edd2e24e6644a7b9206af0190d19a1","1d6d82d5f9fd4223b4cb39da8b71906e","67d8715ffe804a30848713c8a0a1225c","cb85312c172a4ec797df8eeeed7b50ea","86dca30d6fe7477fa12c20af55e0979e","d1cb597477984659adfc79867c7f2d5f","97e1906681564ff3a5b9066d1165b921","d6d56f452f134978a023aabf6c18d654","ddbd0f700bd74ded891b6862fa887352","00809960d3214a0da180890ec6fc832d","b72bfe17274642e8a544f439ebc5127d","3c8ee72ad2c246f6a2384cd057b91c8a","a483de8b43e840b69466acb9fcbe7b01","2b83f344fb9d47b5b91965c0bd726e79","c19f6404cc0245f18e4b8a13bd52457d","adffed60b5ca4f9da8e1174b110d09f4","f5930e8f004e4017828254578793d9ac","796705c5930f4481befc157c136d4509","24eb0896ff964714b787da2bb1e89ed7","436914eea3ef404b88ac3b076339ba74","630689b4f6404735b454de4620d14139","73a2e6d397134746813919bf8ccd1d61","ebc9193508bc41fa8bb01c50eb5a02ee","7666b3fe97564754ba0ca65c09a2f524","c38e14ffbc1d458495058e709de4223b","c74fe032b0ef416da4dc9ba740f198d6","4f3655f2d4324c1c80794f4c31aa1222","8dfcf5dfa1584c8d92e207eeca32019e","287dd099145d4d95b747a6008c6d7359","b034b9bf36ce4bc9a72f1a04632901e1","0f5ce690281a40a3855d107f586fa6b1"]},"executionInfo":{"status":"error","timestamp":1713842284405,"user_tz":240,"elapsed":106620,"user":{"displayName":"Maya Krishnamoorthy","userId":"05037076869531260425"}},"outputId":"3f032c30-fe80-4f79-b3dd-0d43e56dc7a7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/huggingface_hub/utils/_token.py:88: UserWarning: \n","The secret `HF_TOKEN` does not exist in your Colab secrets.\n","To authenticate with the Hugging Face Hub, create a token in your settings tab (https://huggingface.co/settings/tokens), set it as secret in your Google Colab and restart your session.\n","You will be able to reuse this secret in all of your notebooks.\n","Please note that authentication is recommended but still optional to access public models or datasets.\n","  warnings.warn(\n"]},{"output_type":"display_data","data":{"text/plain":["tokenizer_config.json:   0%|          | 0.00/48.0 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"21a27f648df64e839e523ba17f660ce6"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["vocab.txt:   0%|          | 0.00/232k [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"53d1248e1afa463ba00ec0e874c60812"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["tokenizer.json:   0%|          | 0.00/466k [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"ecad9d1dc3d54fd1bdc7a460d5527dce"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["config.json:   0%|          | 0.00/570 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"00809960d3214a0da180890ec6fc832d"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["model.safetensors:   0%|          | 0.00/440M [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"630689b4f6404735b454de4620d14139"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["All PyTorch model weights were used when initializing TFBertForSequenceClassification.\n","\n","Some weights or buffers of the TF 2.0 model TFBertForSequenceClassification were not initialized from the PyTorch model and are newly initialized: ['classifier.weight', 'classifier.bias']\n","You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n"]},{"output_type":"error","ename":"ValueError","evalue":"Data cardinality is ambiguous:\n  x sizes: 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1\n  y sizes: 8620\nMake sure all arrays contain the same number of samples.","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-33-6e7a161d5f7a>\u001b[0m in \u001b[0;36m<cell line: 17>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     15\u001b[0m \u001b[0;31m# Fit the model on training data and evaluate on testing data\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     16\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcompile\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0moptimizer\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mtf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0moptimizers\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mAdam\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlearning_rate\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m2e-5\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mloss\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcompute_loss\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmetrics\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'accuracy'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 17\u001b[0;31m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtrain_encodings\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mepochs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m3\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvalidation_data\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtest_encodings\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_test\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/transformers/modeling_tf_utils.py\u001b[0m in \u001b[0;36mfit\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1227\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1228\u001b[0m         \u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkwargs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mconvert_batch_encoding\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1229\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0msuper\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1230\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1231\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0mfunctools\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwraps\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkeras\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mModel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtrain_on_batch\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/tf_keras/src/utils/traceback_utils.py\u001b[0m in \u001b[0;36merror_handler\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m     68\u001b[0m             \u001b[0;31m# To get the full stack trace, call:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     69\u001b[0m             \u001b[0;31m# `tf.debugging.disable_traceback_filtering()`\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 70\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwith_traceback\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfiltered_tb\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     71\u001b[0m         \u001b[0;32mfinally\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     72\u001b[0m             \u001b[0;32mdel\u001b[0m \u001b[0mfiltered_tb\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/tf_keras/src/engine/data_adapter.py\u001b[0m in \u001b[0;36m_check_data_cardinality\u001b[0;34m(data)\u001b[0m\n\u001b[1;32m   1952\u001b[0m             )\n\u001b[1;32m   1953\u001b[0m         \u001b[0mmsg\u001b[0m \u001b[0;34m+=\u001b[0m \u001b[0;34m\"Make sure all arrays contain the same number of samples.\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1954\u001b[0;31m         \u001b[0;32mraise\u001b[0m \u001b[0mValueError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmsg\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1955\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1956\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mValueError\u001b[0m: Data cardinality is ambiguous:\n  x sizes: 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1...\n  y sizes: 8620\nMake sure all arrays contain the same number of samples."]}]},{"cell_type":"code","source":["from transformers import BertTokenizer, TFBertForSequenceClassification\n","import tensorflow as tf\n","\n","# Initialize tokenizer and model\n","tokenizer = BertTokenizer.from_pretrained('bert-base-uncased')\n","model = TFBertForSequenceClassification.from_pretrained('bert-base-uncased')\n","\n","# Tokenization and encoding of the datasets\n","def encode_reviews(tokenizer, reviews, max_length):\n","    # Encode the reviews\n","    encodings = tokenizer.batch_encode_plus(\n","        reviews,\n","        add_special_tokens=True,\n","        max_length=max_length,\n","        padding='max_length',\n","        truncation=True,\n","        return_attention_mask=True,\n","        return_tensors='tf'\n","    )\n","    return encodings\n","\n","# Tokenize and encode the training and testing data\n","train_reviews = balanced_train_content['text_content']\n","test_reviews = balanced_test_content['text_content']\n","\n","train_encodings = encode_reviews(tokenizer, train_reviews, max_length=512)\n","test_encodings = encode_reviews(tokenizer, test_reviews, max_length=512)\n","\n","# Fit the model on training data and evaluate on testing data\n","model.compile(optimizer=tf.optimizers.Adam(learning_rate=2e-5), loss=model.compute_loss, metrics=['accuracy'])\n","model.fit(\n","    {'input_ids': train_encodings['input_ids'], 'attention_mask': train_encodings['attention_mask']},\n","    y_train,\n","    epochs=3,\n","    validation_data=(\n","        {'input_ids': test_encodings['input_ids'], 'attention_mask': test_encodings['attention_mask']},\n","        y_test\n","    )\n",")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":498},"id":"ps-2h2U6A16O","executionInfo":{"status":"error","timestamp":1713843532188,"user_tz":240,"elapsed":100706,"user":{"displayName":"Maya Krishnamoorthy","userId":"05037076869531260425"}},"outputId":"f1d33b3d-e1d3-4176-f245-70d35f63662d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["All PyTorch model weights were used when initializing TFBertForSequenceClassification.\n","\n","Some weights or buffers of the TF 2.0 model TFBertForSequenceClassification were not initialized from the PyTorch model and are newly initialized: ['classifier.weight', 'classifier.bias']\n","You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n"]},{"output_type":"error","ename":"ValueError","evalue":"Data cardinality is ambiguous:\n  x sizes: 5163, 5163\n  y sizes: 8620\nMake sure all arrays contain the same number of samples.","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-35-cec5e700772f>\u001b[0m in \u001b[0;36m<cell line: 31>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     29\u001b[0m \u001b[0;31m# Fit the model on training data and evaluate on testing data\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     30\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcompile\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0moptimizer\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mtf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0moptimizers\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mAdam\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlearning_rate\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m2e-5\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mloss\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcompute_loss\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmetrics\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'accuracy'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 31\u001b[0;31m model.fit(\n\u001b[0m\u001b[1;32m     32\u001b[0m     \u001b[0;34m{\u001b[0m\u001b[0;34m'input_ids'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mtrain_encodings\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'input_ids'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'attention_mask'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mtrain_encodings\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'attention_mask'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     33\u001b[0m     \u001b[0my_train\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/transformers/modeling_tf_utils.py\u001b[0m in \u001b[0;36mfit\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1227\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1228\u001b[0m         \u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkwargs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mconvert_batch_encoding\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1229\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0msuper\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1230\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1231\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0mfunctools\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwraps\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkeras\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mModel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtrain_on_batch\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/tf_keras/src/utils/traceback_utils.py\u001b[0m in \u001b[0;36merror_handler\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m     68\u001b[0m             \u001b[0;31m# To get the full stack trace, call:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     69\u001b[0m             \u001b[0;31m# `tf.debugging.disable_traceback_filtering()`\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 70\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwith_traceback\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfiltered_tb\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     71\u001b[0m         \u001b[0;32mfinally\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     72\u001b[0m             \u001b[0;32mdel\u001b[0m \u001b[0mfiltered_tb\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/tf_keras/src/engine/data_adapter.py\u001b[0m in \u001b[0;36m_check_data_cardinality\u001b[0;34m(data)\u001b[0m\n\u001b[1;32m   1952\u001b[0m             )\n\u001b[1;32m   1953\u001b[0m         \u001b[0mmsg\u001b[0m \u001b[0;34m+=\u001b[0m \u001b[0;34m\"Make sure all arrays contain the same number of samples.\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1954\u001b[0;31m         \u001b[0;32mraise\u001b[0m \u001b[0mValueError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmsg\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1955\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1956\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mValueError\u001b[0m: Data cardinality is ambiguous:\n  x sizes: 5163, 5163\n  y sizes: 8620\nMake sure all arrays contain the same number of samples."]}]},{"cell_type":"markdown","source":["# LSTM"],"metadata":{"id":"Z9fcxXFQdNkh"}},{"cell_type":"code","source":["import tensorflow as tf\n","from tensorflow.keras.preprocessing.text import Tokenizer\n","from tensorflow.keras.preprocessing.sequence import pad_sequences\n","\n","# Assuming 'text_content' is your text column\n","texts = balanced_train_content['text_content'].fillna('')  # Fill NA values\n","\n","# Initialize the tokenizer\n","tokenizer = Tokenizer(num_words=10000)  # You can set num_words to the size of your vocabulary\n","tokenizer.fit_on_texts(texts)\n","\n","# Convert text to sequences of integers\n","sequences = tokenizer.texts_to_sequences(texts)\n","X_train = pad_sequences(sequences, maxlen=200)  # You can set maxlen to the length that covers most of your data\n","\n","# Prepare test data similarly if you have separate test data\n","test_sequences = tokenizer.texts_to_sequences(balanced_test_content['text_content'].fillna(''))\n","X_test = pad_sequences(test_sequences, maxlen=200)\n"],"metadata":{"id":"LCjF-LY_dP6-"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Create the LSTM model\n","model = tf.keras.Sequential([\n","    tf.keras.layers.Embedding(input_dim=10000, output_dim=128, input_length=200),\n","    tf.keras.layers.LSTM(64, return_sequences=True),\n","    tf.keras.layers.GlobalMaxPool1D(),\n","    tf.keras.layers.Dense(32, activation='relu'),\n","    tf.keras.layers.Dropout(0.5),\n","    tf.keras.layers.Dense(1, activation='sigmoid')  # Use 'softmax' for multi-class and adjust the last Dense layer accordingly\n","])\n","\n","# Compile the model\n","model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])  # Use 'categorical_crossentropy' for multi-class\n"],"metadata":{"id":"PeP4UpAxdhOc"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Fit the model\n","history = model.fit(X_train, y_train, epochs=10, validation_split=0.2)  # Assumes y_train is prepared"],"metadata":{"id":"P71gl-vLdjpk"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Evaluate the model on the test set\n","test_loss, test_acc = model.evaluate(X_test, y_test)  # Assumes y_test is prepared\n","print(\"Test Accuracy:\", test_acc)"],"metadata":{"id":"3C1kBCdudoBo"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Random Forest Classifier\n","\n","from sklearn.ensemble import RandomForestClassifier\n","from sklearn.metrics import accuracy_score\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.metrics import accuracy_score\n","from sklearn.metrics import confusion_matrix, ConfusionMatrixDisplay\n","# Initialize classifier\n","rf_classifier = RandomForestClassifier(n_estimators=100, random_state=42)\n","\n","# Train the classifier on the training data\n","rf_classifier.fit(X_train_tfidf, y_train)\n","\n","# Predict on the test data\n","predicted_labels_rf = rf_classifier.predict(X_test_tfidf)\n","\n","# Reeport accuracy score\n","accuracy_rf = accuracy_score(y_test, predicted_labels_rf)\n","print(\"Test Classification Accuracy (Random Forest):\", accuracy_rf)\n","\n","# Reeport the TP, TN, FP, and FN\n","confusion_matrix_rf = confusion_matrix(y_test, predicted_labels_rf)\n","confusion_matrix_rf\n","\n","disp = ConfusionMatrixDisplay(confusion_matrix_rf, display_labels=rf_classifier.classes_)\n","disp.plot()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":488},"id":"8Uq8v5A2jI4Z","executionInfo":{"status":"ok","timestamp":1713886585662,"user_tz":240,"elapsed":189870,"user":{"displayName":"Maya Krishnamoorthy","userId":"05037076869531260425"}},"outputId":"f940f2f9-3431-440e-db38-c39cbcf702a3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Test Classification Accuracy (Random Forest): 0.5751633986928104\n"]},{"output_type":"execute_result","data":{"text/plain":["<sklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay at 0x7febfd06c100>"]},"metadata":{},"execution_count":29},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Feature Importances\n","\n","feature_importances = rf_classifier.feature_importances_\n","\n","feature_names = tfidf_vectorizer.get_feature_names_out()\n","\n","feature_importance_dict = dict(zip(feature_names, feature_importances))\n","\n","sorted_feature_importance = sorted(feature_importance_dict.items(), key=lambda x: x[1], reverse=True)\n","print(len(sorted_feature_importance))\n","\n","top_three_tokens = sorted_feature_importance[:20]\n","top_three_tokens\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JYsk5LyplSO5","executionInfo":{"status":"ok","timestamp":1713886894670,"user_tz":240,"elapsed":389,"user":{"displayName":"Maya Krishnamoorthy","userId":"05037076869531260425"}},"outputId":"4a6d31b9-45b4-4022-c83d-05eeac352435"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["41252\n"]},{"output_type":"execute_result","data":{"text/plain":["[('copyright', 0.0046518797613992555),\n"," ('2024', 0.004310082377124685),\n"," ('commenting', 0.004219139943471596),\n"," ('republican', 0.003937252893516024),\n"," ('having', 0.003591934729007676),\n"," ('know', 0.0034554146816928315),\n"," ('breitbart', 0.0031147947742959535),\n"," ('obama', 0.002772153104839038),\n"," ('not', 0.002401025238366469),\n"," ('obamas', 0.0023732310859763688),\n"," ('all', 0.0023679704387169144),\n"," ('the', 0.0022932133368443073),\n"," ('on', 0.002291689668450651),\n"," ('let', 0.00221844505558323),\n"," ('that', 0.002208574348504807),\n"," ('president', 0.00218194585165903),\n"," ('fox', 0.0021763949530637233),\n"," ('be', 0.002168284609187772),\n"," ('administration', 0.002118881180159528),\n"," ('comment', 0.0020886334581534352)]"]},"metadata":{},"execution_count":35}]},{"cell_type":"code","source":[],"metadata":{"id":"ss1AZd7TE_x3"},"execution_count":null,"outputs":[]}]}